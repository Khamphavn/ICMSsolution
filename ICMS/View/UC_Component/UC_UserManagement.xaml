<UserControl x:Class="ICMS.View.UC_Component.UC_UserManagement"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:ICMS.View.UC_Component"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
                         
            xmlns:validation="clr-namespace:ICMS.Validation"
             xmlns:converter="clr-namespace:ICMS.Converter"
             >

    <UserControl.Resources>
        <converter:MaskPassword_Converter x:Key="MasksPassword_Converter"/>
    </UserControl.Resources>

    <Grid>
        <GroupBox Header="User management" Margin="10">
            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <!--Operation button-->
                <materialDesign:Card Grid.Row="0" Margin="5 10 5 5"  Padding="0 5 0 5">
                    <StackPanel Orientation="Horizontal">
                        <!--Edit button-->
                        <Button Margin="10 0 20 0" Width="80" Command="{Binding UserEditButtonCommand}">
                            <Button.Style>
                                <Style BasedOn="{StaticResource MaterialDesignRaisedButton}" TargetType="Button">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding CurrentOperationMode}" Value="NormalMode">
                                            <Setter Property="IsEnabled" Value="True"/>
                                            <Setter Property="Content" Value="Edit"/>
                                        </DataTrigger>

                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding CurrentOperationMode}" Value="EditMode"/>
                                                <Condition Binding="{Binding Path=(Validation.HasError), ElementName=User_LoginName_txb}" Value="True"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="IsEnabled" Value="False"/>
                                            <Setter Property="Content" Value="Save"/>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding CurrentOperationMode}" Value="EditMode"/>
                                                <Condition Binding="{Binding Path=(Validation.HasError), ElementName=User_FullName_txb}" Value="True"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="IsEnabled" Value="False"/>
                                            <Setter Property="Content" Value="Save"/>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding CurrentOperationMode}" Value="EditMode"/>
                                                <Condition Binding="{Binding Path=(Validation.HasError), ElementName=User_LoginName_txb}" Value="False"/>
                                                <Condition Binding="{Binding Path=(Validation.HasError), ElementName=User_FullName_txb}" Value="False"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="IsEnabled" Value="True"/>
                                            <Setter Property="Content" Value="Save"/>
                                        </MultiDataTrigger>

                                        <DataTrigger Binding="{Binding CurrentOperationMode}" Value="AddMode">
                                            <Setter Property="IsEnabled" Value="False"/>
                                            <Setter Property="Content" Value="Edit"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>

                        <!--Add button-->
                        <Button Margin="10 0 20 0" Width="80"  Command="{Binding UserAddButtonCommand}">
                            <Button.Style>
                                <Style BasedOn="{StaticResource MaterialDesignRaisedButton}" TargetType="Button">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding CurrentOperationMode}" Value="NormalMode">
                                            <Setter Property="IsEnabled" Value="True"/>
                                            <Setter Property="Content" Value="Add"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding CurrentOperationMode}" Value="EditMode">
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                            <Setter Property="IsEnabled" Value="False"/>
                                            <Setter Property="Content" Value="Add"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding CurrentOperationMode}" Value="AddMode">
                                            <Setter Property="IsEnabled" Value="True"/>
                                            <Setter Property="Content" Value="Save"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>

                        <!--Cancel button-->
                        <Button Margin="10 0 20 0" Width="80"  Command="{Binding UserCancelButtonCommand}"  Content="Cancel">
                            <Button.Style>
                                <Style BasedOn="{StaticResource MaterialDesignRaisedButton}" TargetType="Button">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding CurrentOperationMode}" Value="NormalMode">
                                            <Setter Property="Visibility" Value="Hidden"/>
                                            <Setter Property="IsEnabled" Value="False"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding CurrentOperationMode}" Value="EditMode">
                                            <Setter Property="IsEnabled" Value="True"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding CurrentOperationMode}" Value="AddMode">
                                            <Setter Property="IsEnabled" Value="True"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                    </StackPanel>
                </materialDesign:Card>


                <!--Info on slected item-->
                <materialDesign:Card Grid.Row="1" Margin="5 10 5 5"  Padding="0 10 0 10">
                    <materialDesign:Card.Style>
                        <Style TargetType="materialDesign:Card">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding CurrentOperationMode}" Value="NormalMode">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding CurrentOperationMode}" Value="EditMode">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding CurrentOperationMode}" Value="AddMode">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </materialDesign:Card.Style>
                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                            <ColumnDefinition Width="Auto"/>
                        </Grid.ColumnDefinitions>

                        <!--Login Name-->
                        <TextBox x:Name="User_LoginName_txb" Grid.Column="0" Margin="5 0 0 15" 
                                 Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                                 Width="{Binding ElementName=User_LoginName, Path=ActualWidth}"
                                 materialDesign:HintAssist.Hint="Login Name"  
                                 materialDesign:HintAssist.IsFloating="True"
                                 materialDesign:TextBlockAssist.AutoToolTip="True"
                                 materialDesign:ValidationAssist.HorizontalAlignment="Left"
                                 ToolTip="Tên đăng nhập">

                            <TextBox.Text>
                                <Binding Path="User_LoginName" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                                    <Binding.ValidationRules>
                                        <validation:User_Login_Validation ValidatesOnTargetUpdated="True"/>
                                    </Binding.ValidationRules>
                                </Binding>
                            </TextBox.Text>
                        </TextBox>

                        <!--Full Name-->
                        <TextBox x:Name="User_FullName_txb" Grid.Column="1" Margin="5 0 0 15"
                                 Width="{Binding ElementName=User_FullName, Path=ActualWidth}"
                                 Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                                 materialDesign:HintAssist.Hint="Full Name"  
                                 materialDesign:HintAssist.IsFloating="True"
                                 materialDesign:TextBlockAssist.AutoToolTip="True"
                                 materialDesign:ValidationAssist.HorizontalAlignment="Left"
                                 ToolTip="Tên đăng nhập">
                            <TextBox.Text>
                                <Binding Path="User_FullName" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                                    <Binding.ValidationRules>
                                        <validation:User_FullName_Validation ValidatesOnTargetUpdated="True"/>
                                    </Binding.ValidationRules>
                                </Binding>
                            </TextBox.Text>
                        </TextBox>

                        <!--Role name-->
                        <ComboBox x:Name="User_Role_cbox" Grid.Column="2"
                                   Margin="1 0 0 15"  Padding="0 7 3 5" Height="30"
                                  Width="{Binding ElementName=User_Role, Path=ActualWidth}"
                         
                                  Style="{StaticResource MaterialDesignComboBox}"
                                  materialDesign:ValidationAssist.PopupPlacement ="Bottom"
                                  materialDesign:HintAssist.Hint="Nhóm" 
                          
                          ItemsSource="{Binding RoleList}"  DisplayMemberPath="Name">
                            <ComboBox.SelectedItem>
                                <Binding Path="SelectedRole" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged" >
                                    <Binding.ValidationRules>
                                        <validation:User_Role_Validation ValidatesOnTargetUpdated="True"/>
                                    </Binding.ValidationRules>
                                </Binding>
                            </ComboBox.SelectedItem>
                        </ComboBox>

                        <!--IsActive-->
                        <!--<CheckBox  x:Name="ClassicModeCheckBox" Grid.Column="3"
                           Width="{Binding ElementName=User_IsActive, Path=ActualWidth}"
                           IsThreeState="False"
                           IsChecked="{Binding User_IsActive}"
                           Content="Is Active" />-->
                        <StackPanel Orientation="Vertical" Grid.Column="3"
                            HorizontalAlignment="Center" VerticalAlignment="Top"
                            Width="{Binding ElementName=User_IsActive, Path=ActualWidth}">
                            <TextBlock Text="Is Active" VerticalAlignment="Top" HorizontalAlignment="Center" Margin="0 -7 0 0"  FontSize="12" />
                            <CheckBox VerticalAlignment="Bottom" HorizontalAlignment="Center" Margin="0 10 0 0" 
                              IsThreeState="False"
                              IsChecked="{Binding User_IsActive}"/>
                        </StackPanel>
                    </Grid>

                </materialDesign:Card>


                <!--User datagrid-->
                <materialDesign:Card Grid.Row="2" Margin="5 15 5 5" >
                    <materialDesign:Card.Style>
                        <Style TargetType="materialDesign:Card">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding CurrentOperationMode}" Value="NormalMode">
                                    <Setter Property="IsEnabled" Value="True"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding CurrentOperationMode}" Value="EditMode">
                                    <Setter Property="IsEnabled" Value="False"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding CurrentOperationMode}" Value="AddMode">
                                    <Setter Property="IsEnabled" Value="False"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </materialDesign:Card.Style>

                    <Grid>
                        <Grid.ColumnDefinitions>
                            <ColumnDefinition Width="auto"/>
                            <ColumnDefinition Width="*"/>
                        </Grid.ColumnDefinitions>


                        <DataGrid Grid.Column="0" ItemsSource="{Binding AllUserList, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                        
                                  SelectedItem="{Binding SelectedUser , Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                                  SelectionMode="Single"  SelectionUnit="FullRow"
                       
                                  Style="{StaticResource MaterialDesignDataGrid}"
                                  ColumnHeaderStyle="{StaticResource MaterialDesignDataGridColumnHeader}"
                                  AutoGenerateColumns="False"  CanUserAddRows="False"    CanUserDeleteRows="False"   IsReadOnly="True"
                                  HeadersVisibility="Column"    GridLinesVisibility="All"  HorizontalAlignment="Left" VerticalAlignment="Top"
                                  Margin="5 5 0 0">
                            
                            <DataGrid.Resources>
                                <ContextMenu x:Key="UserRowContextMenu" 
                                     DataContext="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=DataContext.CurrentControl.UserManagementControl}">
                                    <MenuItem Header="Edit User" Command="{Binding UserEditButtonCommand}"  />
                                    <MenuItem Header="Add New User" Command="{Binding UserAddButtonCommand}" />
                                </ContextMenu>
                            </DataGrid.Resources>

                            <!--Context menu appear only on row, not on header-->
                            <DataGrid.RowStyle>
                                <Style x:Name="User_DataGrid_RowStyle" BasedOn="{StaticResource MaterialDesignDataGridRow}" TargetType="DataGridRow" >
                                    <Setter Property="ContextMenu" Value="{StaticResource UserRowContextMenu}" />
                                    <Style.Triggers>
                                        <Trigger Property="IsSelected" Value="True">
                                            <Setter Property="Foreground" Value="{StaticResource PrimaryHueMidBrush }"/>
                                            <Setter Property="FontWeight" Value="Bold"/>
                                        </Trigger>
                                    </Style.Triggers>
                                </Style>
                            </DataGrid.RowStyle>

                            <DataGrid.Columns>

                                <DataGridTextColumn Header="Login Name" x:Name="User_LoginName"
                                            ElementStyle="{StaticResource MaterialDesignDataGridTextColumnStyle}"
                                            EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnEditingStyle}">
                                    <DataGridTextColumn.Binding>
                                        <Binding  Path="LoginName">
                                            <!--<Binding.ValidationRules>
                                        <validation:NotEmptyValidationRule/>
                                    </Binding.ValidationRules>-->
                                        </Binding>
                                    </DataGridTextColumn.Binding>
                                </DataGridTextColumn>

                                <DataGridTextColumn Header="Full Name"  x:Name="User_FullName" MinWidth="180"
                                            ElementStyle="{StaticResource MaterialDesignDataGridTextColumnStyle}"
                                            EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnEditingStyle}">
                                    <DataGridTextColumn.Binding>
                                        <Binding  Path="FullName">
                                            <!--<Binding.ValidationRules>
                                        <validation:NotEmptyValidationRule/>
                                    </Binding.ValidationRules>-->
                                        </Binding>
                                    </DataGridTextColumn.Binding>
                                </DataGridTextColumn>

                                <DataGridTextColumn Header="Role Name" x:Name="User_Role" MinWidth="110"
                                            ElementStyle="{StaticResource MaterialDesignDataGridTextColumnStyle}"
                                            EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnEditingStyle}">
                                    <DataGridTextColumn.Binding>
                                        <Binding  Path="Role.Name"/>
                                    </DataGridTextColumn.Binding>
                                </DataGridTextColumn>

                                <DataGridTextColumn Header="Password" x:Name="User_Password" MinWidth="110"
                                            ElementStyle="{StaticResource MaterialDesignDataGridTextColumnStyle}"
                                            EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnEditingStyle}">
                                    <DataGridTextColumn.Binding>
                                        <Binding  Path="Password">
                                            <Binding.Converter>
                                                <converter:MaskPassword_Converter/>
                                            </Binding.Converter>
                                        </Binding>
                                    </DataGridTextColumn.Binding>
                                    
                                </DataGridTextColumn>

                                <DataGridCheckBoxColumn Header="IsActive" x:Name="User_IsActive" MinWidth="90"
                                                ElementStyle="{StaticResource MaterialDesignDataGridCheckBoxColumnStyle}"
                                                EditingElementStyle="{StaticResource MaterialDesignDataGridCheckBoxColumnEditingStyle}">
                                    <DataGridCheckBoxColumn.Binding>
                                        <Binding Path="IsActive"/>
                                    </DataGridCheckBoxColumn.Binding>
                                </DataGridCheckBoxColumn>


                            </DataGrid.Columns>
                        </DataGrid>


                        <!--<GroupBox Grid.Column="1" Header="Chú ý" 
                                  FontSize="15"  
                                  HorizontalAlignment="Left" VerticalAlignment="Top" Height="300"
                          
                          Margin="50 5 0 0"
                          materialDesign:ColorZoneAssist.Mode="Inverted"
                          materialDesign:ColorZoneAssist.Background="Black"
                          materialDesign:ColorZoneAssist.Foreground="White">

                            <GroupBox.Style>
                                <Style TargetType="GroupBox" BasedOn="{StaticResource MaterialDesignGroupBox}">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding CurrentOperationMode}" Value="NormalMode">
                                            <Setter Property="Visibility" Value="Hidden"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </GroupBox.Style>

                            <StackPanel Orientation="Vertical">
                                <TextBlock Text=" • Login Name" FontWeight="Bold" FontSize="15" Margin="5 5 15 5" />
                                <TextBlock Text="      -  Viết liền không dấu" FontSize="13" Margin="2 2 15 2"/>
                                <TextBlock Text="      -  Duy nhất" FontSize="13" Margin="2 2 15 2"/>
                                <TextBlock Text=" • Role" FontWeight="Bold" FontSize="15" Margin="5 10 15 5" />
                                <TextBlock Text="      -  Có ít nhất 1 TM" FontSize="13" Margin="2 2 15 2"/>
                                <TextBlock Text=" • IsActive" FontWeight="Bold" FontSize="15" Margin="5 10 15 5" />
                                <TextBlock Text="      -  Có ít nhất 1 tài khoản active" FontSize="13" Margin="2 2 15 2"/>
                            </StackPanel>

                        </GroupBox>-->


                    </Grid>

                </materialDesign:Card>
            </Grid>
        </GroupBox>
    </Grid>
</UserControl>
