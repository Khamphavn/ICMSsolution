<UserControl x:Class="ICMS.View.UC_Component.UC_City"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:ICMS.View.UC_Component"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800"
             
             xmlns:converter="clr-namespace:ICMS.Converter"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:validation="clr-namespace:ICMS.Validation"
             >


    <UserControl.Resources>
        <converter:InverseAndBooleansToBooleanConverter x:Key="InverseAndBooleansToBooleanConverter"/>
    </UserControl.Resources>

    <Grid Margin="50 5 5 5" HorizontalAlignment="Center" IsEnabled="True">
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!--Operation button-->
        <materialDesign:Card Grid.Row="0" Margin="5 10 5 0"  Padding="0 0 0 0">
            <DockPanel>
                <StackPanel Orientation="Horizontal">

                    <!--Edit button-->
                    <Button Margin="20 5 20 5" Width="80"  Command="{Binding CityEditButtonCommand}">
                        <Button.Style>
                            <Style BasedOn="{StaticResource MaterialDesignRaisedButton}" TargetType="Button">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding CurrentOperationMode}" Value="NormalMode">
                                        <Setter Property="IsEnabled" Value="True"/>
                                        <Setter Property="Content" Value="Edit"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding CurrentOperationMode}" Value="EditMode">
                                        <Setter Property="Content" Value="Save"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding CurrentOperationMode}" Value="AddMode">
                                        <Setter Property="IsEnabled" Value="False"/>
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>


                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding CurrentOperationMode}" Value="EditMode"/>
                                            <Condition Binding="{Binding Path=(Validation.HasError), ElementName=City_Name_txb}" Value="True"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </MultiDataTrigger>

                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding CurrentOperationMode}" Value="EditMode"/>
                                            <Condition Binding="{Binding Path=(Validation.HasError), ElementName=City_PhoneCode}" Value="True"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </MultiDataTrigger>

                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding CurrentOperationMode}" Value="EditMode"/>
                                            <Condition Binding="{Binding Path=(Validation.HasError), ElementName=City_Name_txb}" Value="False"/>
                                            <Condition Binding="{Binding Path=(Validation.HasError), ElementName=City_PhoneCode}" Value="False"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="IsEnabled" Value="True"/>
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>

                    <!--Add button-->
                    <Button Margin="20 5 20 5" Width="80" Command="{Binding CityAddButtonCommand}">
                        <Button.Style>
                            <Style BasedOn="{StaticResource MaterialDesignRaisedButton}" TargetType="Button">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding CurrentOperationMode}" Value="NormalMode">
                                        <Setter Property="IsEnabled" Value="True"/>
                                        <Setter Property="Content" Value="Add"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding CurrentOperationMode}" Value="AddMode">
                                        <Setter Property="Content" Value="Save"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding CurrentOperationMode}" Value="EditMode">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </DataTrigger>

                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding CurrentOperationMode}" Value="AddMode"/>
                                            <Condition Binding="{Binding Path=(Validation.HasError), ElementName=City_Name_txb}" Value="True"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </MultiDataTrigger>

                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding CurrentOperationMode}" Value="AddMode"/>
                                            <Condition Binding="{Binding Path=(Validation.HasError), ElementName=City_PhoneCode}" Value="True"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </MultiDataTrigger>

                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding CurrentOperationMode}" Value="AddMode"/>
                                            <Condition Binding="{Binding Path=(Validation.HasError), ElementName=City_Name_txb}" Value="False"/>
                                            <Condition Binding="{Binding Path=(Validation.HasError), ElementName=City_PhoneCode}" Value="False"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="IsEnabled" Value="True"/>
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>

                    <!--Cancel button-->
                    <Button Margin="20 5 20 5" Width="80"
                    Command="{Binding CityCancelButtonCommand}"
                    Content="Cancel">
                        <Button.Style>
                            <Style BasedOn="{StaticResource MaterialDesignRaisedButton}" TargetType="Button">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding CurrentOperationMode}" Value="NormalMode">
                                        <Setter Property="Visibility" Value="Hidden"/>
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding CurrentOperationMode}" Value="EditMode">
                                        <Setter Property="IsEnabled" Value="True"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding CurrentOperationMode}" Value="AddMode">
                                        <Setter Property="IsEnabled" Value="True"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>

                </StackPanel>

                <StackPanel DockPanel.Dock="Right" HorizontalAlignment="Right">
                    <!--Delete button-->
                    <Button Margin="5 5 20 5" Width="80" Background="Red" BorderThickness="0" 
                        Command="{Binding CityDeleteButtonCommand}"
                            ToolTip="Không nên xóa"
                        Content="Xóa">
                        <Button.Style>
                            <Style BasedOn="{StaticResource MaterialDesignRaisedButton}" TargetType="Button">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding CurrentOperationMode}" Value="NormalMode">
                                        <Setter Property="Visibility" Value="Visible"/>
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding CurrentOperationMode}" Value="EditMode">
                                        <Setter Property="Visibility" Value="Hidden"/>
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding CurrentOperationMode}" Value="AddMode">
                                        <Setter Property="Visibility" Value="Hidden"/>
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                </StackPanel>

            </DockPanel>

        </materialDesign:Card>

        <!--Info on slected item-->
        <materialDesign:Card Grid.Row="1" Margin="5 10 5 0"  Padding="0 0 0 10">
            <materialDesign:Card.Style>
                <Style TargetType="materialDesign:Card">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding CurrentOperationMode}" Value="NormalMode">
                            <Setter Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding CurrentOperationMode}" Value="EditMode">
                            <Setter Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding CurrentOperationMode}" Value="AddMode">
                            <Setter Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </materialDesign:Card.Style>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <!-- Name -->
                <TextBox x:Name="City_Name_txb" Grid.Column="0"
                         Margin="20 0 1 0" 
                         Width="{Binding ElementName=City_Name, Path=ActualWidth}"
                         Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                         materialDesign:HintAssist.Hint="Tên tỉnh/thành"  
                         materialDesign:HintAssist.IsFloating="True"
                         
                         materialDesign:TextBlockAssist.AutoToolTip="True"
                         materialDesign:ValidationAssist.HorizontalAlignment="Left"
                         ToolTip="Không cần thiết">
                    <TextBox.Text>
                        <Binding Path="City_Name"  Mode="TwoWay"   UpdateSourceTrigger="PropertyChanged">
                            <Binding.ValidationRules>
                                <validation:City_Name_Validation ValidatesOnTargetUpdated="True"/>
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>

                <!-- Phone Code -->
                <TextBox x:Name="City_PhoneCode_txb" Grid.Column="1" 
                         Margin="1 0 1 0"
                         Width="{Binding ElementName=City_PhoneCode, Path=ActualWidth}"
                         Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                         materialDesign:HintAssist.Hint="Mã điện thoại">
                    <TextBox.Text>
                        <Binding Path="City_PhoneCode" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                            <Binding.ValidationRules>
                                <validation:City_PhoneCode_Validation ValidatesOnTargetUpdated="True"/>
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>

                <!-- IsActive -->
                <CheckBox x:Name="City_IsActive_checkbox"  Grid.Column="2" Content="Hiệu lực"
                          BorderThickness="1" BorderBrush="Black"
                         Margin="20 0 1 0"  
                         Width="{Binding ElementName=City_IsActive, Path=ActualWidth}"
                         Style="{StaticResource MaterialDesignDarkCheckBox}"
                         materialDesign:HintAssist.Hint="Địa chỉ"
                          IsThreeState="False" 
                          IsChecked="{Binding City_IsActive}"/>




                <!--Refresh button-->
                <Button Style="{StaticResource MaterialDesignIconButton}" Grid.Column="3"
                        Command="{Binding CityClearFieldButtonCommand}"
                        Margin="20 0 0 0"
                        ToolTip="Clear all input fields">
                    <materialDesign:PackIcon Kind="BackspaceOutline"/>
                </Button>
            </Grid>
        </materialDesign:Card>

        <!-- City datagrid-->
        <materialDesign:Card Grid.Row="2" Margin="5 10 5 10" >
            <materialDesign:Card.Style>
                <Style TargetType="materialDesign:Card">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding CurrentOperationMode}" Value="NormalMode">
                            <Setter Property="IsEnabled" Value="True"/>

                        </DataTrigger>
                        <DataTrigger Binding="{Binding CurrentOperationMode}" Value="EditMode">
                            <Setter Property="IsEnabled" Value="False"/>
                            <!--<Setter Property="Background" Value="LightGray"/>-->
                        </DataTrigger>
                        <DataTrigger Binding="{Binding CurrentOperationMode}" Value="AddMode">
                            <Setter Property="IsEnabled" Value="False"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </materialDesign:Card.Style>

            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="*"/>
                    <RowDefinition Height="auto"/>
                </Grid.RowDefinitions>

                <!-- City datagrid-->
                <Grid Grid.Row="0"  Margin="20 5 5 20">
                    <DataGrid ItemsSource="{Binding Cities, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                          SelectedItem="{Binding SelectedCity , Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                      
                          Style="{StaticResource MaterialDesignDataGrid}"
                            ColumnHeaderStyle="{StaticResource MaterialDesignDataGridColumnHeader}"
                            RowHeight="35"
                            AutoGenerateColumns="False" 
                            CanUserAddRows="False" CanUserDeleteRows="False" CanUserSortColumns="True"
                            CanUserReorderColumns="False" CanUserResizeColumns="True"  CanUserResizeRows="False"
                            EnableRowVirtualization="True"  VirtualizingPanel.VirtualizationMode="Standard"
                            SelectionMode="Single"       SelectionUnit="FullRow"
                            IsReadOnly="True"
                          
                          ScrollViewer.CanContentScroll="True" 
                          HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
                        <DataGrid.Resources>
                            <ContextMenu x:Key="CityRowContextMenu" 
                                     DataContext="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=DataContext.CurrentControl}">
                                <MenuItem Header="Edit Customer" Command="{Binding CityEditButtonCommand}"  />
                                <MenuItem Header="Add New Customer" Command="{Binding CityAddButtonCommand}" />
                            </ContextMenu>
                        </DataGrid.Resources>

                        <!--Context menu appear only on row, not on header-->
                        <DataGrid.RowStyle>
                            <Style BasedOn="{StaticResource MaterialDesignDataGridRow}" TargetType="DataGridRow" >
                                <Setter Property="ContextMenu" Value="{StaticResource CityRowContextMenu}" />
                            </Style>
                        </DataGrid.RowStyle>

                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Tên tỉnh/thành" x:Name="City_Name"
                                                EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnEditingStyle}"
                                                Binding="{Binding Name}" IsReadOnly="True"
                                                Width="*" MaxWidth="200">
                                <DataGridTextColumn.ElementStyle>
                                    <Style TargetType="TextBlock" BasedOn="{StaticResource MaterialDesignDataGridTextColumnStyle}">
                                        <Setter Property="HorizontalAlignment" Value="Left"/>
                                    </Style>
                                </DataGridTextColumn.ElementStyle>
                            </DataGridTextColumn>

                            <DataGridTextColumn Header="Mã điện thoaị"  x:Name="City_PhoneCode"
                                                ElementStyle="{StaticResource MaterialDesignDataGridTextColumnStyle}"
                                                EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnEditingStyle}"
                                                Binding="{Binding PhoneCode}"
                                                Width="*" MaxWidth="200">
                            </DataGridTextColumn>

                            <DataGridCheckBoxColumn Header="Hiệu lực" x:Name="City_IsActive"
                                                    ElementStyle="{StaticResource MaterialDesignDataGridCheckBoxColumnStyle}"
                                                    EditingElementStyle="{StaticResource MaterialDesignDataGridCheckBoxColumnEditingStyle}"
                                                    Binding="{Binding IsActive}"
                                                    Width="*" MaxWidth="200"/>

                        </DataGrid.Columns>
                    </DataGrid>
                </Grid>

            </Grid>
        </materialDesign:Card>

    </Grid>
</UserControl>
