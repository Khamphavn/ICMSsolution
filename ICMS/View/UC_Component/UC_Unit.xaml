<UserControl x:Class="ICMS.View.UC_Component.UC_Unit"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:ICMS.View.UC_Component"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800"
             
              xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:converter="clr-namespace:ICMS.Converter"
            xmlns:validation="clr-namespace:ICMS.Validation"
             
             
             >


    <UserControl.Resources>
        <converter:StringRemoveWhiteSpaceConverter x:Key="StringRemoveWhiteSpaceConverter"/>
    </UserControl.Resources>

    <Grid Margin="5 5 5 5" HorizontalAlignment="Center">
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>


        <!--Operation button-->
        <materialDesign:Card Grid.Row="0" Margin="50 10 50 5"  Padding="0 0 0 0">
            <DockPanel>
                <StackPanel Orientation="Horizontal" DockPanel.Dock="Left">
                    <!--Edit button-->
                    <Button Margin="20 5 20 5" Width="80"
                            Command="{Binding UnitEditButtonCommand}"
                            IsEnabled="{Binding CurrentUser.Role.RoleActions[6].Edit}">
                        <Button.Style>
                            <Style BasedOn="{StaticResource MaterialDesignRaisedButton}" TargetType="Button">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding CurrentOperationMode}" Value="NormalMode">
                                        <Setter Property="IsEnabled" Value="True"/>
                                        <Setter Property="Content" Value="Sửa"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding CurrentOperationMode}" Value="EditMode">
                                        <Setter Property="Content" Value="Lưu"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding CurrentOperationMode}" Value="AddMode">
                                        <Setter Property="IsEnabled" Value="False"/>
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>

                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding CurrentOperationMode}" Value="EditMode"/>
                                            <Condition Binding="{Binding Path=(Validation.HasError), ElementName=Unit_Name_txb}" Value="True"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </MultiDataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding CurrentOperationMode}" Value="EditMode"/>
                                            <Condition Binding="{Binding Path=(Validation.HasError), ElementName=Unit_Order_txb}" Value="True"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </MultiDataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding CurrentOperationMode}" Value="EditMode"/>
                                            <Condition Binding="{Binding Path=(Validation.HasError), ElementName=Unit_Name_txb}" Value="False"/>
                                            <Condition Binding="{Binding Path=(Validation.HasError), ElementName=Unit_Order_txb}" Value="False"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="IsEnabled" Value="True"/>
                                    </MultiDataTrigger>


                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>

                    <!--Add button-->
                    <Button Margin="10 5 20 5" Width="80"
                    Command="{Binding UnitAddButtonCommand}"
                            IsEnabled="{Binding CurrentUser.Role.RoleActions[6].Add}">
                        <Button.Style>
                            <Style BasedOn="{StaticResource MaterialDesignRaisedButton}" TargetType="Button">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding CurrentOperationMode}" Value="NormalMode">
                                        <Setter Property="IsEnabled" Value="True"/>
                                        <Setter Property="Content" Value="Thêm"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding CurrentOperationMode}" Value="AddMode">
                                        <Setter Property="Content" Value="Lưu"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding CurrentOperationMode}" Value="EditMode">
                                        <Setter Property="IsEnabled" Value="False"/>
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>

                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding CurrentOperationMode}" Value="AddMode"/>
                                            <Condition Binding="{Binding Path=(Validation.HasError), ElementName=Unit_Name_txb}" Value="True"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </MultiDataTrigger>
                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding CurrentOperationMode}" Value="AddMode"/>
                                            <Condition Binding="{Binding Path=(Validation.HasError), ElementName=Unit_Order_txb}" Value="True"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </MultiDataTrigger>

                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding CurrentOperationMode}" Value="AddMode"/>
                                            <Condition Binding="{Binding Path=(Validation.HasError), ElementName=Unit_Name_txb}" Value="False"/>
                                            <Condition Binding="{Binding Path=(Validation.HasError), ElementName=Unit_Order_txb}" Value="False"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="IsEnabled" Value="True"/>
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>

                    <!--Cancel button-->
                    <Button Margin="10 5 20 5" Width="80"
                    Command="{Binding UnitCancelButtonCommand}"
                    Content="Hủy">
                        <Button.Style>
                            <Style BasedOn="{StaticResource MaterialDesignRaisedButton}" TargetType="Button">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding CurrentOperationMode}" Value="NormalMode">
                                        <Setter Property="Visibility" Value="Hidden"/>
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding CurrentOperationMode}" Value="EditMode">
                                        <Setter Property="IsEnabled" Value="True"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding CurrentOperationMode}" Value="AddMode">
                                        <Setter Property="IsEnabled" Value="True"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>

                </StackPanel>

                <StackPanel Orientation="Horizontal" DockPanel.Dock="Right" HorizontalAlignment="Right">
                    <!--Delete button-->
                    <Button Margin="5 5 20 5" Width="80" Background="Red" BorderThickness="0" 
                        Command="{Binding UnitDeleteButtonCommand}"
                            IsEnabled="{Binding CurrentUser.Role.RoleActions[6].Delete}"
                        Content="Xóa">
                        <Button.Style>
                            <Style BasedOn="{StaticResource MaterialDesignRaisedButton}" TargetType="Button">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding CurrentOperationMode}" Value="NormalMode">
                                        <Setter Property="Visibility" Value="Visible"/>
                                        <Setter Property="IsEnabled" Value="True"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding CurrentOperationMode}" Value="EditMode">
                                        <Setter Property="Visibility" Value="Hidden"/>
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding CurrentOperationMode}" Value="AddMode">
                                        <Setter Property="Visibility" Value="Hidden"/>
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                </StackPanel>
            </DockPanel>

        </materialDesign:Card>


        <!--Info on slected item-->
        <materialDesign:Card Grid.Row="1" Margin="50 10 50 5"  Padding="0 10 0 10">
            <materialDesign:Card.Style>
                <Style TargetType="materialDesign:Card">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding CurrentOperationMode}" Value="NormalMode">
                            <Setter Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding CurrentOperationMode}" Value="EditMode">
                            <Setter Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding CurrentOperationMode}" Value="AddMode">
                            <Setter Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </materialDesign:Card.Style>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <!-- Unit Id - Hidden -->
                <TextBox x:Name="Unit_Id_txb" Grid.Column="0" Visibility="Hidden"
                         Margin="20 0 1 10" 
                         Width="{Binding ElementName=Unit_Id, Path=ActualWidth}"
                         Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                         />

                <!--Unit Name-->
                <TextBox x:Name="Unit_Name_txb" Grid.Column="1"
                         Margin="1 0 1 10" 
                         Width="{Binding ElementName=Unit_Name, Path=ActualWidth}"
                         materialDesign:HintAssist.Hint="Tên Đơn vị"  
                         materialDesign:ValidationAssist.PopupPlacement="Bottom"
                         materialDesign:ValidationAssist.HorizontalAlignment="Left"
                         ToolTip="Unit Name">
                    <!--<TextBox.Style>
                        <Style BasedOn="{StaticResource MaterialDesignFloatingHintTextBox}" TargetType="TextBox">
                            <Setter Property="ContextMenu">
                                <Setter.Value>
                                    <ContextMenu IsEnabled="True"/>
                                </Setter.Value>
                            </Setter>
                        </Style>
                    </TextBox.Style>-->
                    <TextBox.Text>
                        <Binding Path="Unit_Name" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                            <Binding.ValidationRules>
                                <validation:Unit_Name_Validation ValidatesOnTargetUpdated="True"/>
                            </Binding.ValidationRules>
                            <Binding.Converter>
                                <converter:StringRemoveWhiteSpaceConverter/>
                            </Binding.Converter>
                        </Binding>
                    </TextBox.Text>
                </TextBox>

                <!--Is Active-->
                <Border Grid.Column="2" BorderThickness="1" BorderBrush="Black" Margin="1 0 1 10" >
                    <StackPanel Orientation="Horizontal" 
                            HorizontalAlignment="Center" VerticalAlignment="Top"
                            Width="{Binding ElementName=Unit_IsActive, Path=ActualWidth}">
                        <CheckBox VerticalAlignment="Bottom" HorizontalAlignment="Center" Margin="20 5 5 0" 
                              Style="{StaticResource MaterialDesignDarkCheckBox}"
                              IsThreeState="False"
                              IsChecked="{Binding Unit_IsActive}"/>
                        <TextBlock Text="Is Active" VerticalAlignment="Center" HorizontalAlignment="Center"  
                               Margin="5 5 5 0" FontSize="12" />

                    </StackPanel>
                </Border>



                <!--Order-->
                <TextBox x:Name="Unit_Order_txb" materialDesign:HintAssist.Hint="Thứ tự" Grid.Column="3"
                          Margin="1 0 1 10"
                         Width="{Binding ElementName=Unit_Order, Path=ActualWidth}"
                         Style="{StaticResource MaterialDesignFloatingHintTextBox}">
                    <TextBox.Text>
                        <Binding Path="Unit_Order" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                            <Binding.ValidationRules>
                                <validation:Unit_Order_Validation ValidatesOnTargetUpdated="True"/>
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                </TextBox>
            </Grid>
        </materialDesign:Card>


        <!--Unit datagrid-->
        <materialDesign:Card Grid.Row="2" Margin="50 10 50 10" >
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="*"/>
                    <ColumnDefinition Width="auto"/>
                </Grid.ColumnDefinitions>

                <Grid Grid.Column="0">
                    <Grid.Style>
                        <Style TargetType="Grid">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding CurrentOperationMode}" Value="NormalMode">
                                    <Setter Property="IsEnabled" Value="True"/>

                                </DataTrigger>
                                <DataTrigger Binding="{Binding CurrentOperationMode}" Value="EditMode">
                                    <Setter Property="IsEnabled" Value="False"/>
                                    <!--<Setter Property="Background" Value="LightGray"/>-->
                                </DataTrigger>
                                <DataTrigger Binding="{Binding CurrentOperationMode}" Value="AddMode">
                                    <Setter Property="IsEnabled" Value="False"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Grid.Style>

                    <DataGrid ItemsSource="{Binding AllUnitList, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                        SelectedItem="{Binding SelectedUnit , Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                       Margin="20 10 5 10"
                         Style="{StaticResource MaterialDesignDataGrid}"
                            ColumnHeaderStyle="{StaticResource MaterialDesignDataGridColumnHeader}"
                            RowHeight="35"
                            AutoGenerateColumns="False" 
                            CanUserAddRows="False" CanUserDeleteRows="False" CanUserSortColumns="True"
                            CanUserReorderColumns="False" CanUserResizeColumns="True"  CanUserResizeRows="False"
                            EnableRowVirtualization="True"  VirtualizingPanel.VirtualizationMode="Standard"
                            SelectionMode="Single"       SelectionUnit="FullRow"
                            IsReadOnly="True"
                          
                          ScrollViewer.CanContentScroll="True" 
                          HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
                        <DataGrid.Resources>
                            <ContextMenu x:Key="UnitRowContextMenu" 
                                     DataContext="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=DataContext.CurrentControl}">
                                <MenuItem Header="Sửa" Command="{Binding UnitEditButtonCommand}"  IsEnabled="{Binding CurrentUser.Role.RoleActions[6].Edit}" />
                                <MenuItem Header="Thêm mới" Command="{Binding UnitAddButtonCommand}" IsEnabled="{Binding CurrentUser.Role.RoleActions[6].Add}"/>
                                <Separator/>
                                <MenuItem Header="Xóa" Foreground="Red" Command="{Binding UnitDeleteButtonCommand}" IsEnabled="{Binding CurrentUser.Role.RoleActions[6].Delete}"/>
                            </ContextMenu>
                            <!--Remove black border when cell is slected-->
                            <SolidColorBrush x:Key="MaterialDesignTextBoxBorder" Color="Transparent"/>
                        </DataGrid.Resources>

                        <!--Context menu appear only on row, not on header-->
                        <DataGrid.RowStyle>
                            <Style x:Name="Unit_DataGrid_RowStyle" BasedOn="{StaticResource MaterialDesignDataGridRow}" TargetType="DataGridRow" >
                                <Setter Property="ContextMenu" Value="{StaticResource UnitRowContextMenu}" />
                            </Style>
                        </DataGrid.RowStyle>

                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Id" x:Name="Unit_Id"
                                            ElementStyle="{StaticResource MaterialDesignDataGridTextColumnStyle}"
                                            EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnEditingStyle}"
                                            Binding="{Binding UnitId}"
                                            Width="*" MinWidth="30" MaxWidth="70">

                            </DataGridTextColumn>

                            <DataGridTextColumn Header="Đơn vị" x:Name="Unit_Name"
                                            ElementStyle="{StaticResource MaterialDesignDataGridTextColumnStyle}"
                                            EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnEditingStyle}"
                                            Binding="{Binding Name}"
                                            Width="*" MinWidth="100" MaxWidth="150"/>

                            <DataGridCheckBoxColumn Header="Hiệu lức" x:Name="Unit_IsActive"
                                                ElementStyle="{StaticResource MaterialDesignDataGridCheckBoxColumnStyle}"
                                                EditingElementStyle="{StaticResource MaterialDesignDataGridCheckBoxColumnEditingStyle}"
                                                Binding="{Binding IsActive}"
                                                Width="*" MinWidth="50" MaxWidth="150"/>

                            <DataGridTextColumn Header="Thứ tự"  x:Name="Unit_Order"
                                            ElementStyle="{StaticResource MaterialDesignDataGridTextColumnStyle}"
                                            EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnEditingStyle}"
                                            Binding="{Binding Order}"
                                            Width="*" MinWidth="50" MaxWidth="150"/>
                        </DataGrid.Columns>
                    </DataGrid>
                </Grid>


                <GroupBox Grid.Column="1" Header="Chú ý" 
                          FontSize="15"  FontWeight="Medium"
                          HorizontalAlignment="Left" VerticalAlignment="Top" Height="300"
                          
                          Margin="50 10 20 0" MinWidth="200" MaxWidth="500"
                          materialDesign:ColorZoneAssist.Mode="Custom"
                          materialDesign:ColorZoneAssist.Background="{StaticResource PrimaryHueLightBrush}"
                          materialDesign:ColorZoneAssist.Foreground="White">

                    <GroupBox.Style>
                        <Style TargetType="GroupBox" BasedOn="{StaticResource MaterialDesignGroupBox}">
                            <!--<Style.Triggers>
                                <DataTrigger Binding="{Binding CurrentOperationMode}" Value="NormalMode">
                                    <Setter Property="Visibility" Value="Visible"/>
                                </DataTrigger>
                            </Style.Triggers>-->
                        </Style>
                    </GroupBox.Style>

                    <StackPanel Orientation="Vertical">
                        <TextBlock Text=" • Thứ tự (Order)" FontWeight="Bold" FontSize="15" Margin="5 5 15 5" />
                        <TextBlock Text="      -  Danh sách đơn vị đo sẽ sắp sếp theo thứ tự:" FontSize="13" Margin="2 2 15 2"/>
                        <TextBlock Text="             +  Được kích hoạt" FontSize="13" Margin="2 2 15 2"/>
                        <TextBlock Text="             +  Số thứ tự tăng dần" FontSize="13" Margin="2 2 15 30"/>
                        <TextBlock Text=" • Ký tự đặc biệt" FontWeight="Bold" FontSize="15" Margin="5 5 15 5" />
                        <TextBox Text="      µ  " FontSize="13" Margin="2 2 15 2" IsReadOnly="True"/>
                    </StackPanel>

                </GroupBox>


            </Grid>

        </materialDesign:Card>

    </Grid>
</UserControl>
