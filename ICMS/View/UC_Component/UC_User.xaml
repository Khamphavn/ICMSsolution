<UserControl x:Class="ICMS.View.UC_Component.UC_User"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:ICMS.View.UC_Component"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
                         
            xmlns:validation="clr-namespace:ICMS.Validation"
             >

    <Grid Margin="5 5 5 5" IsEnabled="False">
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>


        <!--Operation button-->
        <materialDesign:Card Grid.Row="0" Margin="5 10 5 5"  Padding="0 5 0 5">
            <StackPanel Orientation="Horizontal">
                <!--Edit button-->
                <Button Margin="10 0 20 0" Width="80"
                    Command="{Binding UserEditButtonCommand}">
                    <Button.Style>
                        <Style BasedOn="{StaticResource MaterialDesignRaisedButton}" TargetType="Button">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding CurrentOperationMode}" Value="NormalMode">
                                    <Setter Property="IsEnabled" Value="True"/>
                                    <Setter Property="Content" Value="Edit"/>
                                </DataTrigger>

                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding CurrentOperationMode}" Value="EditMode"/>
                                        <Condition Binding="{Binding Path=(Validation.HasError), ElementName=User_LoginName_txb}" Value="True"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="IsEnabled" Value="False"/>
                                    <Setter Property="Content" Value="Save"/>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding CurrentOperationMode}" Value="EditMode"/>
                                        <Condition Binding="{Binding Path=(Validation.HasError), ElementName=User_FullName_txb}" Value="True"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="IsEnabled" Value="False"/>
                                    <Setter Property="Content" Value="Save"/>
                                </MultiDataTrigger>
                                <MultiDataTrigger>
                                    <MultiDataTrigger.Conditions>
                                        <Condition Binding="{Binding CurrentOperationMode}" Value="EditMode"/>
                                        <Condition Binding="{Binding Path=(Validation.HasError), ElementName=User_LoginName_txb}" Value="False"/>
                                        <Condition Binding="{Binding Path=(Validation.HasError), ElementName=User_FullName_txb}" Value="False"/>
                                    </MultiDataTrigger.Conditions>
                                    <Setter Property="IsEnabled" Value="True"/>
                                    <Setter Property="Content" Value="Save"/>
                                </MultiDataTrigger>

                                <DataTrigger Binding="{Binding CurrentOperationMode}" Value="AddMode">
                                    <Setter Property="IsEnabled" Value="False"/>
                                    <Setter Property="Content" Value="Edit"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>

                <!--Add button-->
                <Button Margin="10 0 20 0" Width="80"
                    Command="{Binding UserAddButtonCommand}">
                    <Button.Style>
                        <Style BasedOn="{StaticResource MaterialDesignRaisedButton}" TargetType="Button">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding CurrentOperationMode}" Value="NormalMode">
                                    <Setter Property="IsEnabled" Value="True"/>
                                    <Setter Property="Content" Value="Add"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding CurrentOperationMode}" Value="EditMode">
                                    <Setter Property="Visibility" Value="Collapsed"/>
                                    <Setter Property="IsEnabled" Value="False"/>
                                    <Setter Property="Content" Value="Add"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding CurrentOperationMode}" Value="AddMode">
                                    <Setter Property="IsEnabled" Value="True"/>
                                    <Setter Property="Content" Value="Save"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>

                <!--Cancel button-->
                <Button Margin="10 0 20 0" Width="80"
                    Command="{Binding UserCancelButtonCommand}"
                    Content="Cancel">
                    <Button.Style>
                        <Style BasedOn="{StaticResource MaterialDesignRaisedButton}" TargetType="Button">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding CurrentOperationMode}" Value="NormalMode">
                                    <Setter Property="Visibility" Value="Hidden"/>
                                    <Setter Property="IsEnabled" Value="False"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding CurrentOperationMode}" Value="EditMode">
                                    <Setter Property="IsEnabled" Value="True"/>
                                </DataTrigger>
                                <DataTrigger Binding="{Binding CurrentOperationMode}" Value="AddMode">
                                    <Setter Property="IsEnabled" Value="True"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </Button.Style>
                </Button>
            </StackPanel>
        </materialDesign:Card>


        <!--Info on slected item-->
        <materialDesign:Card Grid.Row="1" Margin="5 10 5 5"  Padding="0 10 0 10">
            <materialDesign:Card.Style>
                <Style TargetType="materialDesign:Card">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding CurrentOperationMode}" Value="NormalMode">
                            <Setter Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding CurrentOperationMode}" Value="EditMode">
                            <Setter Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding CurrentOperationMode}" Value="AddMode">
                            <Setter Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </materialDesign:Card.Style>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <!--Login Name-->
                <TextBox x:Name="User_LoginName_txb" Grid.Column="0"
                         Margin="5 0 0 5" Padding="5 0 5 0" VerticalAlignment="Center"
                         Width="{Binding ElementName=User_LoginName, Path=ActualWidth}"
                         
                         materialDesign:HintAssist.Hint="Login Name"  
                         materialDesign:TextBlockAssist.AutoToolTip="True"
                         materialDesign:HintAssist.FloatingScale="0.9"
                         materialDesign:HintAssist.FloatingOffset="0 -25"
                         materialDesign:TextFieldAssist.HasClearButton="True"
                         
                         materialDesign:ValidationAssist.UsePopup="False"
                         materialDesign:ValidationAssist.PopupPlacement="Bottom"
                         
                         materialDesign:ValidationAssist.HorizontalAlignment="Left"
                         
                         ToolTip="Tên đăng nhập">

                    <TextBox.Text>
                        <Binding Path="User_LoginName" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                            <Binding.ValidationRules>
                                <validation:User_Login_Validation ValidatesOnTargetUpdated="True"/>
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>

                    <TextBox.Style>
                        <Style BasedOn="{StaticResource MaterialDesignFloatingHintTextBox}" TargetType="TextBox">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding CurrentOperationMode}" Value="NormalMode">
                                </DataTrigger>
                                <DataTrigger Binding="{Binding CurrentOperationMode}" Value="EditMode">
                                </DataTrigger>
                                <DataTrigger Binding="{Binding CurrentOperationMode}" Value="AddMode">
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBox.Style>
                </TextBox>

                <!--Full Name-->
                <TextBox x:Name="User_FullName_txb" materialDesign:HintAssist.Hint="Full Name" Grid.Column="1"
                          Margin="5 0 0 5" Padding="5 0 5 0" VerticalAlignment="Center"
                         Width="{Binding ElementName=User_FullName, Path=ActualWidth}"
                         materialDesign:TextBlockAssist.AutoToolTip="True"
                         materialDesign:HintAssist.FloatingScale="0.9"
                         materialDesign:HintAssist.FloatingOffset="0 -25"
                         materialDesign:TextFieldAssist.HasClearButton="True"
                         
                         materialDesign:ValidationAssist.UsePopup="False"
                         materialDesign:ValidationAssist.PopupPlacement="Bottom"
                         
                         materialDesign:ValidationAssist.HorizontalAlignment="Left">
                    <TextBox.Text>
                        <Binding Path="User_FullName" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                            <Binding.ValidationRules>
                                <validation:User_FullName_Validation ValidatesOnTargetUpdated="True"/>
                            </Binding.ValidationRules>
                        </Binding>
                    </TextBox.Text>
                    <TextBox.Style>
                        <Style BasedOn="{StaticResource MaterialDesignFloatingHintTextBox}" TargetType="TextBox">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding CurrentOperationMode}" Value="NormalMode">
                                </DataTrigger>
                                <DataTrigger Binding="{Binding CurrentOperationMode}" Value="EditMode">
                                </DataTrigger>
                                <DataTrigger Binding="{Binding CurrentOperationMode}" Value="AddMode">
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </TextBox.Style>
                </TextBox>

                <!--Role name-->
                <ComboBox x:Name="User_Role_cbox" materialDesign:HintAssist.Hint="Chức danh" Grid.Column="2"
                           Margin="5 5 0 10" Padding="5 0 5 0" VerticalAlignment="Center"
                          materialDesign:HintAssist.FloatingScale="0.9"
                          materialDesign:HintAssist.FloatingOffset="0 -26"
                          Style="{StaticResource MaterialDesignFloatingHintComboBox}"

                          Width="{Binding ElementName=User_Role, Path=ActualWidth}"
                          
                          ItemsSource="{Binding RoleList}"  DisplayMemberPath="Name">
                    <ComboBox.SelectedItem>
                        <Binding Path="SelectedRole" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged" >
                            <Binding.ValidationRules>
                                <validation:User_Role_Validation ValidatesOnTargetUpdated="True"/>
                            </Binding.ValidationRules>
                        </Binding>
                    </ComboBox.SelectedItem>
                </ComboBox>

                <!--IsActive-->
                <!--<CheckBox  x:Name="ClassicModeCheckBox" Grid.Column="3"
                           Width="{Binding ElementName=User_IsActive, Path=ActualWidth}"
                           IsThreeState="False"
                           IsChecked="{Binding User_IsActive}"
                           Content="Is Active" />-->
                <StackPanel Orientation="Vertical" Grid.Column="3"
                            HorizontalAlignment="Center" VerticalAlignment="Top"
                            Width="{Binding ElementName=User_IsActive, Path=ActualWidth}">
                    <TextBlock Text="Is Active" VerticalAlignment="Top" HorizontalAlignment="Center" Margin="0 -7 0 0"  FontSize="12" />
                    <CheckBox VerticalAlignment="Bottom" HorizontalAlignment="Center" Margin="0 10 0 0" 
                              IsThreeState="False"
                              IsChecked="{Binding User_IsActive}"/>
                </StackPanel>
            </Grid>

        </materialDesign:Card>


        <!--User datagrid-->
        <materialDesign:Card Grid.Row="2" Margin="5 15 5 5" >
            <materialDesign:Card.Style>
                <Style TargetType="materialDesign:Card">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding CurrentOperationMode}" Value="NormalMode">
                            <Setter Property="IsEnabled" Value="True"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding CurrentOperationMode}" Value="EditMode">
                            <Setter Property="IsEnabled" Value="False"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding CurrentOperationMode}" Value="AddMode">
                            <Setter Property="IsEnabled" Value="False"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </materialDesign:Card.Style>

            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="auto"/>
                    <ColumnDefinition Width="*"/>
                </Grid.ColumnDefinitions>


                <DataGrid Grid.Column="0" ItemsSource="{Binding AllUserList, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                        SelectedItem="{Binding SelectedUser , Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                      
                        SelectionMode="Single"  SelectionUnit="FullRow"
                      
                        AutoGenerateColumns="False"  CanUserAddRows="False"    CanUserDeleteRows="False"   IsReadOnly="True"
                        HeadersVisibility="Column"    GridLinesVisibility="All"  HorizontalAlignment="Left" VerticalAlignment="Top"
                        Margin="5 5 0 0">
                    <DataGrid.Resources>
                        <Style BasedOn="{StaticResource MaterialDesignDataGridColumnHeader}" TargetType="DataGridColumnHeader">
                            <Setter Property="Background" Value="SkyBlue"/>
                            <Setter Property="Foreground" Value="Black"/>
                            <Setter Property="FontWeight" Value="SemiBold"/>
                            <Style.Triggers>
                                <Trigger Property="IsMouseOver" Value="true">
                                    <Setter Property="Background" Value="DeepSkyBlue"/>
                                    <Setter Property="Foreground" Value="AntiqueWhite"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>

                        <ContextMenu x:Key="UserRowContextMenu" 
                                     DataContext="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=DataContext.CurrentControl}">
                            <MenuItem Header="Edit User" Command="{Binding UserEditButtonCommand}"  />
                            <MenuItem Header="Add New User" Command="{Binding UserAddButtonCommand}" />
                        </ContextMenu>
                    </DataGrid.Resources>

                    <!--Context menu appear only on row, not on header-->
                    <DataGrid.RowStyle>
                        <Style x:Name="User_DataGrid_RowStyle" BasedOn="{StaticResource MaterialDesignDataGridRow}" TargetType="DataGridRow" >
                            <Setter Property="ContextMenu" Value="{StaticResource UserRowContextMenu}" />
                            <Style.Triggers>
                                <Trigger Property="IsSelected" Value="True">
                                    <Setter Property="Foreground" Value="{StaticResource PrimaryHueMidBrush }"/>
                                    <Setter Property="FontWeight" Value="Bold"/>
                                </Trigger>
                            </Style.Triggers>
                        </Style>
                    </DataGrid.RowStyle>

                    <DataGrid.Columns>

                        <DataGridTextColumn Header="Login Name" x:Name="User_LoginName"
                                            ElementStyle="{StaticResource MaterialDesignDataGridTextColumnStyle}"
                                            EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnEditingStyle}">
                            <DataGridTextColumn.Binding>
                                <Binding  Path="LoginName">
                                    <!--<Binding.ValidationRules>
                                        <validation:NotEmptyValidationRule/>
                                    </Binding.ValidationRules>-->
                                </Binding>
                            </DataGridTextColumn.Binding>
                        </DataGridTextColumn>

                        <DataGridTextColumn Header="Full Name"  x:Name="User_FullName"
                                            ElementStyle="{StaticResource MaterialDesignDataGridTextColumnStyle}"
                                            EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnEditingStyle}">
                            <DataGridTextColumn.Binding>
                                <Binding  Path="FullName">
                                    <!--<Binding.ValidationRules>
                                        <validation:NotEmptyValidationRule/>
                                    </Binding.ValidationRules>-->
                                </Binding>
                            </DataGridTextColumn.Binding>
                        </DataGridTextColumn>

                        <DataGridTextColumn Header="Role Name" x:Name="User_Role"
                                            ElementStyle="{StaticResource MaterialDesignDataGridTextColumnStyle}"
                                            EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnEditingStyle}">
                            <DataGridTextColumn.Binding>
                                <Binding  Path="Role.Name"/>
                            </DataGridTextColumn.Binding>
                        </DataGridTextColumn>

                        <DataGridCheckBoxColumn Header="IsActive" x:Name="User_IsActive"
                                                ElementStyle="{StaticResource MaterialDesignDataGridCheckBoxColumnStyle}"
                                                EditingElementStyle="{StaticResource MaterialDesignDataGridCheckBoxColumnEditingStyle}">
                            <DataGridCheckBoxColumn.Binding>
                                <Binding Path="IsActive"/>
                            </DataGridCheckBoxColumn.Binding>
                        </DataGridCheckBoxColumn>


                    </DataGrid.Columns>
                </DataGrid>


                <GroupBox Grid.Column="1" Header="Chú ý" 
                          FontSize="19" HorizontalAlignment="Left" VerticalAlignment="Top" Height="300"
                          
                          Margin="100 5 0 0"
                          materialDesign:ColorZoneAssist.Mode="Custom"
                          materialDesign:ColorZoneAssist.Background="Black"
                          materialDesign:ColorZoneAssist.Foreground="White">

                    <GroupBox.Style>
                        <Style TargetType="GroupBox" BasedOn="{StaticResource MaterialDesignGroupBox}">
                            <Style.Triggers>
                                <DataTrigger Binding="{Binding CurrentOperationMode}" Value="NormalMode">
                                    <Setter Property="Visibility" Value="Hidden"/>
                                </DataTrigger>
                            </Style.Triggers>
                        </Style>
                    </GroupBox.Style>

                    <StackPanel Orientation="Vertical">
                        <TextBlock Text=" • Login Name" FontWeight="Bold" FontSize="15" Margin="5 5 15 5" />
                        <TextBlock Text="      -  Viết liền không dấu" FontSize="13" Margin="2 2 15 2"/>
                        <TextBlock Text="      -  Duy nhất" FontSize="13" Margin="2 2 15 2"/>
                        <TextBlock Text=" • Role" FontWeight="Bold" FontSize="15" Margin="5 10 15 5" />
                        <TextBlock Text="      -  Có ít nhất 1 TM" FontSize="13" Margin="2 2 15 2"/>
                        <TextBlock Text=" • IsActive" FontWeight="Bold" FontSize="15" Margin="5 10 15 5" />
                        <TextBlock Text="      -  Có ít nhất 1 tài khoản active" FontSize="13" Margin="2 2 15 2"/>
                    </StackPanel>

                </GroupBox>


            </Grid>

        </materialDesign:Card>

    </Grid>
    
</UserControl>
