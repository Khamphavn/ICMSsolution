<UserControl x:Class="ICMS.View.UC_Component.UC_Customer"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:ICMS.View.UC_Component"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800"
             
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:converter="clr-namespace:ICMS.Converter"
             xmlns:validation="clr-namespace:ICMS.Validation"
             >
    
    
    
    <Grid Margin="5 5 5 5">
        <Grid.RowDefinitions>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="auto"/>
            <RowDefinition Height="*"/>
        </Grid.RowDefinitions>

        <!--Operation button-->
        <materialDesign:Card Grid.Row="0" Margin="5 10 5 5"  Padding="0 0 0 0">
            <DockPanel>
                <StackPanel Orientation="Horizontal">
                    <!--Edit button-->
                    <Button Margin="20 5 20 5" Width="80"  Command="{Binding CustomerEditButtonCommand}">
                        <Button.Style>
                            <Style BasedOn="{StaticResource MaterialDesignRaisedButton}" TargetType="Button">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding CurrentOperationMode}" Value="NormalMode">
                                        <Setter Property="IsEnabled" Value="{Binding CurrentUser.Role.RoleActions[9].Edit}"/>
                                        <Setter Property="Content" Value="Sửa"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding CurrentOperationMode}" Value="EditMode">
                                        <Setter Property="Content" Value="Lưu"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding CurrentOperationMode}" Value="AddMode">
                                        <Setter Property="IsEnabled" Value="False"/>
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                    </DataTrigger>

                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding CurrentOperationMode}" Value="EditMode"/>
                                            <Condition Binding="{Binding Path=(Validation.HasError), ElementName=Customer_shortname_txb}" Value="True"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </MultiDataTrigger>

                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding CurrentOperationMode}" Value="EditMode"/>
                                            <Condition Binding="{Binding Path=(Validation.HasError), ElementName=Customer_fullname_txb}" Value="True"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </MultiDataTrigger>

                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding CurrentOperationMode}" Value="EditMode"/>
                                            <Condition Binding="{Binding Path=(Validation.HasError), ElementName=Customer_address_txb}" Value="True"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </MultiDataTrigger>

                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding CurrentOperationMode}" Value="EditMode"/>
                                            <Condition Binding="{Binding Path=(Validation.HasError), ElementName=Customer_City_cbox}" Value="True"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </MultiDataTrigger>

                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding CurrentOperationMode}" Value="EditMode"/>
                                            <Condition Binding="{Binding Path=(Validation.HasError), ElementName=Customer_shortname_txb}" Value="False"/>
                                            <Condition Binding="{Binding Path=(Validation.HasError), ElementName=Customer_fullname_txb}" Value="False"/>
                                            <Condition Binding="{Binding Path=(Validation.HasError), ElementName=Customer_address_txb}" Value="False"/>
                                            <Condition Binding="{Binding Path=(Validation.HasError), ElementName=Customer_City_cbox}" Value="False"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="IsEnabled" Value="True"/>
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>

                    <!--Add button-->
                    <Button Margin="20 5 20 5" Width="80"   Command="{Binding CustomerAddButtonCommand}">
                        <Button.Style>
                            <Style BasedOn="{StaticResource MaterialDesignRaisedButton}" TargetType="Button">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding CurrentOperationMode}" Value="NormalMode">
                                        <Setter Property="IsEnabled" Value="{Binding CurrentUser.Role.RoleActions[9].Add}"/>
                                        <Setter Property="Content" Value="Thêm"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding CurrentOperationMode}" Value="AddMode">
                                        <Setter Property="Content" Value="Lưu"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding CurrentOperationMode}" Value="EditMode">
                                        <Setter Property="Visibility" Value="Collapsed"/>
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </DataTrigger>

                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding CurrentOperationMode}" Value="AddMode"/>
                                            <Condition Binding="{Binding Path=(Validation.HasError), ElementName=Customer_shortname_txb}" Value="True"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </MultiDataTrigger>

                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding CurrentOperationMode}" Value="AddMode"/>
                                            <Condition Binding="{Binding Path=(Validation.HasError), ElementName=Customer_fullname_txb}" Value="True"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </MultiDataTrigger>

                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding CurrentOperationMode}" Value="AddMode"/>
                                            <Condition Binding="{Binding Path=(Validation.HasError), ElementName=Customer_address_txb}" Value="True"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </MultiDataTrigger>

                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding CurrentOperationMode}" Value="AddMode"/>
                                            <Condition Binding="{Binding Path=(Validation.HasError), ElementName=Customer_City_cbox}" Value="True"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </MultiDataTrigger>

                                    <MultiDataTrigger>
                                        <MultiDataTrigger.Conditions>
                                            <Condition Binding="{Binding CurrentOperationMode}" Value="AddMode"/>
                                            <Condition Binding="{Binding Path=(Validation.HasError), ElementName=Customer_shortname_txb}" Value="False"/>
                                            <Condition Binding="{Binding Path=(Validation.HasError), ElementName=Customer_fullname_txb}" Value="False"/>
                                            <Condition Binding="{Binding Path=(Validation.HasError), ElementName=Customer_address_txb}" Value="False"/>
                                            <Condition Binding="{Binding Path=(Validation.HasError), ElementName=Customer_City_cbox}" Value="False"/>
                                        </MultiDataTrigger.Conditions>
                                        <Setter Property="IsEnabled" Value="True"/>
                                    </MultiDataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>

                    <!--Cancel button-->
                    <Button Margin="5 5 20 5" Width="80"   Command="{Binding CustomerCancelButtonCommand}"    Content="Hủy">
                        <Button.Style>
                            <Style BasedOn="{StaticResource MaterialDesignRaisedButton}" TargetType="Button">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding CurrentOperationMode}" Value="NormalMode">
                                        <Setter Property="Visibility" Value="Hidden"/>
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding CurrentOperationMode}" Value="EditMode">
                                        <Setter Property="IsEnabled" Value="True"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding CurrentOperationMode}" Value="AddMode">
                                        <Setter Property="IsEnabled" Value="True"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                </StackPanel>

                <StackPanel Orientation="Horizontal" DockPanel.Dock="Right" HorizontalAlignment="Right">
                    <!--Delete button-->
                    <Button Margin="5 5 20 5" Width="80" Background="Red" BorderThickness="0" 
                        Command="{Binding CustomerDeleteButtonCommand}"
                        Content="Xóa">
                        <Button.Style>
                            <Style BasedOn="{StaticResource MaterialDesignRaisedButton}" TargetType="Button">
                                <Style.Triggers>
                                    <DataTrigger Binding="{Binding CurrentOperationMode}" Value="NormalMode">
                                        <Setter Property="Visibility" Value="Visible"/>
                                        <Setter Property="IsEnabled" Value="{Binding CurrentUser.Role.RoleActions[9].Delete}"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding CurrentOperationMode}" Value="EditMode">
                                        <Setter Property="Visibility" Value="Hidden"/>
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                    <DataTrigger Binding="{Binding CurrentOperationMode}" Value="AddMode">
                                        <Setter Property="Visibility" Value="Hidden"/>
                                        <Setter Property="IsEnabled" Value="False"/>
                                    </DataTrigger>
                                </Style.Triggers>
                            </Style>
                        </Button.Style>
                    </Button>
                </StackPanel>
            </DockPanel>

        </materialDesign:Card>

        <!--Info on slected item-->
        <materialDesign:Card Grid.Row="1" Margin="5 10 5 5"  Padding="0 0 0 10">
            <materialDesign:Card.Style>
                <Style TargetType="materialDesign:Card">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding CurrentOperationMode}" Value="NormalMode">
                            <Setter Property="Visibility" Value="Collapsed"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding CurrentOperationMode}" Value="EditMode">
                            <Setter Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                        <DataTrigger Binding="{Binding CurrentOperationMode}" Value="AddMode">
                            <Setter Property="Visibility" Value="Visible"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </materialDesign:Card.Style>
            <Grid>
                <Grid.ColumnDefinitions>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                    <ColumnDefinition Width="Auto"/>
                </Grid.ColumnDefinitions>

                <!--Tên viết tắt-->
                <TextBox x:Name="Customer_shortname_txb" Grid.Column="0"
                         Margin="20 0 1 0" 
                         Width="{Binding ElementName=Customer_ShortName, Path=ActualWidth}"
                         Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                         materialDesign:HintAssist.Hint="Tên viết tắt"  
                         materialDesign:TextBlockAssist.AutoToolTip="True"
                         materialDesign:ValidationAssist.HorizontalAlignment="Left"
                         ToolTip="Không cần thiết"
                         >
                    <TextBox.Text>
                        <Binding Path="Customer_ShortName"  Mode="TwoWay"   UpdateSourceTrigger="PropertyChanged">
                            <Binding.ValidationRules>
                                <validation:Customer_ShortName_Validation ValidatesOnTargetUpdated="True"/>
                            </Binding.ValidationRules>
                            <Binding.Converter>
                                <converter:StringRemoveWhiteSpaceConverter/>
                            </Binding.Converter>
                        </Binding>
                    </TextBox.Text>
                </TextBox>

                <!--Tên đơn vị-->
                <TextBox x:Name="Customer_fullname_txb" Grid.Column="1" 
                         Margin="1 0 1 0"
                         Width="{Binding ElementName=Customer_FullName, Path=ActualWidth}"
                         Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                         materialDesign:HintAssist.Hint="Tên đơn vị" 
                      >
                    <TextBox.Text>
                        <Binding Path="Customer_FullName" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                            <Binding.ValidationRules>
                                <validation:Customer_FullName_Unique_Validation ValidatesOnTargetUpdated="True"/>
                            </Binding.ValidationRules>
                            <Binding.Converter>
                                <converter:StringReplaceMultipleSpaceToOneConverter/>
                            </Binding.Converter>
                        </Binding>
                    </TextBox.Text>
                </TextBox>

                <!--Địa chỉ-->
                <TextBox x:Name="Customer_address_txb"  Grid.Column="2"
                         Margin="0 0 1 0"
                         Width="{Binding ElementName=Customer_AddressName, Path=ActualWidth}"
                         Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                         materialDesign:HintAssist.Hint="Địa chỉ"
                         >
                    <TextBox.Text>
                        <Binding Path="Customer_Address" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged">
                            <Binding.ValidationRules>
                                <validation:NotEmptyValidationRule ValidatesOnTargetUpdated="True"/>
                            </Binding.ValidationRules>
                            <Binding.Converter>
                                <converter:StringReplaceMultipleSpaceToOneConverter/>
                            </Binding.Converter>
                        </Binding>
                    </TextBox.Text>
                </TextBox>

                <!--Tỉnh/thành-->

                <ComboBox x:Name="Customer_City_cbox" Grid.Column="3"
                          Margin="1 0 0 0"  Padding="0 7 3 5" Height="28"
                          Width="{Binding ElementName=Customer_City, Path=ActualWidth}"
                          Style="{StaticResource MaterialDesignComboBox}"
                          materialDesign:ValidationAssist.PopupPlacement ="Bottom"
                          materialDesign:HintAssist.Hint="Tỉnh/thành" 
                          
                          ItemsSource="{Binding CityList}"  DisplayMemberPath="Name">
                    <ComboBox.SelectedItem>
                        <Binding Path="SelectedCity" Mode="TwoWay" UpdateSourceTrigger="PropertyChanged" >
                            <Binding.ValidationRules>
                                <validation:Customer_City_Validation ValidatesOnTargetUpdated="True"/>
                            </Binding.ValidationRules>
                        </Binding>
                    </ComboBox.SelectedItem>

                </ComboBox>

                <!--Refresh button-->
                <Button Style="{StaticResource MaterialDesignIconButton}" Grid.Column="5"
                        Command="{Binding CustomerClearFieldButtonCommand}"
                        Margin="20 0 0 0"
                        ToolTip="Clear all input fields"
>
                    <materialDesign:PackIcon Kind="BackspaceOutline"/>
                </Button>
            </Grid>

        </materialDesign:Card>


        <!--Search button and Customer datagrid-->
        <materialDesign:Card Grid.Row="2" Margin="5 10 5 0" >
            <materialDesign:Card.Style>
                <Style TargetType="materialDesign:Card">
                    <Style.Triggers>
                        <DataTrigger Binding="{Binding CurrentOperationMode}" Value="NormalMode">
                            <Setter Property="IsEnabled" Value="True"/>

                        </DataTrigger>
                        <DataTrigger Binding="{Binding CurrentOperationMode}" Value="EditMode">
                            <Setter Property="IsEnabled" Value="False"/>
                            <!--<Setter Property="Background" Value="LightGray"/>-->
                        </DataTrigger>
                        <DataTrigger Binding="{Binding CurrentOperationMode}" Value="AddMode">
                            <Setter Property="IsEnabled" Value="False"/>
                        </DataTrigger>
                    </Style.Triggers>
                </Style>
            </materialDesign:Card.Style>

            <Grid>
                <Grid.RowDefinitions>
                    <RowDefinition Height="auto"/>
                    <RowDefinition Height="*"/>
                </Grid.RowDefinitions>

                <!--Button search-->
                <TextBox Grid.Row="0"  Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                         Margin="20 5 0 5" Width="300"
                         BorderBrush="{StaticResource PrimaryHueLightBrush}"
                         BorderThickness="2"
                         materialDesign:TextFieldAssist.HasClearButton="True"
                         
                         VerticalAlignment="Center"  HorizontalAlignment="Left"
                         ToolTip="Tìm kiếm gần đúng"
                         
                         TextChanged="SearchBox_TextChanged">

                    <materialDesign:HintAssist.Hint>
                        <StackPanel
                            Orientation="Horizontal"
                            Margin="-2 0 0 0">
                            <materialDesign:PackIcon Kind="Magnify" />
                            <TextBlock   Text="Search" />
                        </StackPanel>
                    </materialDesign:HintAssist.Hint>
                </TextBox>

                <!--Customer datagrid-->
                <Grid Grid.Row="1" HorizontalAlignment="Left" Margin="20 5 5 20">
                    <DataGrid ItemsSource="{Binding FilterCustomerList, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                          SelectedItem="{Binding SelectedCustomer , Mode=OneWayToSource, UpdateSourceTrigger=PropertyChanged}"
                      
                          Style="{StaticResource MaterialDesignDataGrid}"
                            ColumnHeaderStyle="{StaticResource MaterialDesignDataGridColumnHeader}"
                            RowHeight="35"
                            AutoGenerateColumns="False" 
                            CanUserAddRows="False" CanUserDeleteRows="False" CanUserSortColumns="True"
                            CanUserReorderColumns="False" CanUserResizeColumns="True"  CanUserResizeRows="False"
                            EnableRowVirtualization="True"  VirtualizingPanel.VirtualizationMode="Standard"
                            SelectionMode="Single"       SelectionUnit="FullRow"
                            IsReadOnly="True"
                          
                          ScrollViewer.CanContentScroll="True" 
                          HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto"
                          >
                        <DataGrid.Resources>
                            <ContextMenu x:Key="CustomerRowContextMenu" 
                                     DataContext="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=DataContext.CurrentControl}">
                                <MenuItem Header="Sửa" Command="{Binding CustomerEditButtonCommand}"   IsEnabled="{Binding CurrentUser.Role.RoleActions[9].Edit}"/>
                                <MenuItem Header="Thêm mới" Command="{Binding CustomerAddButtonCommand}"  IsEnabled="{Binding CurrentUser.Role.RoleActions[9].Add}"/>
                                <Separator/>
                                <MenuItem Header="Xóa" Foreground="Red" Command="{Binding CustomerDeleteButtonCommand}" IsEnabled="{Binding CurrentUser.Role.RoleActions[9].Delete}"/>
                            </ContextMenu>
                            
                            <!--Remove black border when cell is slected-->
                            <SolidColorBrush x:Key="MaterialDesignTextBoxBorder" Color="Transparent"/>
                        </DataGrid.Resources>

                        <!--Context menu appear only on row, not on header-->
                        <DataGrid.RowStyle>
                            <Style BasedOn="{StaticResource MaterialDesignDataGridRow}" TargetType="DataGridRow" >
                                <Setter Property="ContextMenu" Value="{StaticResource CustomerRowContextMenu}" />
                            </Style>
                        </DataGrid.RowStyle>

                        <DataGrid.Columns>
                            <DataGridTextColumn Header="Tên viết tắt" x:Name="Customer_ShortName"
                                                EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnEditingStyle}"
                                                Binding="{Binding ShortName}" IsReadOnly="True"
                                                Width="120" MinWidth="100" MaxWidth="300">
                                <DataGridTextColumn.ElementStyle>
                                    <Style TargetType="TextBlock" BasedOn="{StaticResource MaterialDesignDataGridTextColumnStyle}">
                                        <Setter Property="HorizontalAlignment" Value="Left"/>
                                    </Style>
                                </DataGridTextColumn.ElementStyle>
                            </DataGridTextColumn>

                            <DataGridTextColumn Header="Tên đơn vị"  x:Name="Customer_FullName"
                                                EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnEditingStyle}"
                                                Binding="{Binding FullName}"
                                                Width="500" MinWidth="300" MaxWidth="800">
                                <DataGridTextColumn.ElementStyle>
                                    <Style TargetType="TextBlock" BasedOn="{StaticResource MaterialDesignDataGridTextColumnStyle}">
                                        <Setter Property="HorizontalAlignment" Value="Left"/>
                                    </Style>
                                </DataGridTextColumn.ElementStyle>
                            </DataGridTextColumn>

                            <DataGridTextColumn Header="Địa chỉ" x:Name="Customer_AddressName"
                                                EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnEditingStyle}"
                                                Binding="{Binding Address}"
                                                Width="500" MinWidth="300" MaxWidth="800">
                                <DataGridTextColumn.ElementStyle>
                                    <Style TargetType="TextBlock" BasedOn="{StaticResource MaterialDesignDataGridTextColumnStyle}">
                                        <Setter Property="HorizontalAlignment" Value="Left"/>
                                    </Style>
                                </DataGridTextColumn.ElementStyle>
                            </DataGridTextColumn>

                            <DataGridTextColumn Header="Tỉnh/thành" x:Name="Customer_City"
                                                ElementStyle="{StaticResource MaterialDesignDataGridTextColumnStyle}"
                                                EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnEditingStyle}"
                                                 Binding="{Binding City.Name}"
                                                Width="120" MinWidth="100" MaxWidth="250"/>
                        </DataGrid.Columns>
                    </DataGrid>
                </Grid>

            </Grid>
        </materialDesign:Card>


    </Grid>
</UserControl>
