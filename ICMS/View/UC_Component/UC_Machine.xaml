<UserControl x:Class="ICMS.View.UC_Component.UC_Machine"
             xmlns="http://schemas.microsoft.com/winfx/2006/xaml/presentation"
             xmlns:x="http://schemas.microsoft.com/winfx/2006/xaml"
             xmlns:mc="http://schemas.openxmlformats.org/markup-compatibility/2006" 
             xmlns:d="http://schemas.microsoft.com/expression/blend/2008" 
             xmlns:local="clr-namespace:ICMS.View.UC_Component"
             mc:Ignorable="d" 
             d:DesignHeight="450" d:DesignWidth="800"
             xmlns:materialDesign="http://materialdesigninxaml.net/winfx/xaml/themes"
             xmlns:converter="clr-namespace:ICMS.Converter"
            xmlns:validation="clr-namespace:ICMS.Validation"
             
             >

    <UserControl.Resources>
        <converter:StringReplaceMultipleSpaceToOneConverter x:Key="StringReplaceMultipleSpaceToOneConverter"/>

    </UserControl.Resources>


    <Grid Margin="5 5 5 5">
        <Grid.ColumnDefinitions>
            <!-- Machine Name -->
            <ColumnDefinition Width="*"/>
            <!-- Machine Type -->
            <ColumnDefinition Width="*"/>
            <!-- Sensor Type -->
            <ColumnDefinition Width="*"/>
        </Grid.ColumnDefinitions>

        <!-- Machine Name -->
        <Grid Grid.Column="0" Margin="100 5 20 20">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <!--Operation button-->
            <materialDesign:Card Grid.Row="0" Margin="5 10 5 5"  Padding="0 0 0 0">
                <DockPanel>
                    <StackPanel Orientation="Horizontal">
                        <!--Edit button-->
                        <Button Margin="20 5 20 5" Width="80"  Command="{Binding MachineNameEditButtonCommand}"
                                IsEnabled="{Binding CurrentUser.Role.RoleActions[11].Edit}">
                            <Button.Style>
                                <Style BasedOn="{StaticResource MaterialDesignRaisedButton}" TargetType="Button">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding MachineNameCurrentOperationMode}" Value="NormalMode">
                                            <Setter Property="IsEnabled" Value="True"/>
                                            <Setter Property="Content" Value="Sửa"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding MachineNameCurrentOperationMode}" Value="EditMode">
                                            <Setter Property="Content" Value="Lưu"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding MachineNameCurrentOperationMode}" Value="AddMode">
                                            <Setter Property="IsEnabled" Value="False"/>
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                        </DataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding MachineNameCurrentOperationMode}" Value="EditMode"/>
                                                <Condition Binding="{Binding Path=(Validation.HasError), ElementName=MachineName_Name_txb}" Value="True"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="IsEnabled" Value="False"/>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding MachineNameCurrentOperationMode}" Value="EditMode"/>
                                                <Condition Binding="{Binding Path=(Validation.HasError), ElementName=MachineName_Name_txb}" Value="False"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="IsEnabled" Value="True"/>
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>

                        <!--Add button-->
                        <Button Margin="20 5 20 5" Width="80" Command="{Binding MachineNameAddButtonCommand}"
                                IsEnabled="{Binding CurrentUser.Role.RoleActions[11].Add}">
                            <Button.Style>
                                <Style BasedOn="{StaticResource MaterialDesignRaisedButton}" TargetType="Button">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding MachineNameCurrentOperationMode}" Value="NormalMode">
                                            <Setter Property="IsEnabled" Value="True"/>
                                            <Setter Property="Content" Value="Thêm"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding MachineNameCurrentOperationMode}" Value="AddMode">
                                            <Setter Property="Content" Value="Lưu"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding MachineNameCurrentOperationMode}" Value="EditMode">
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                            <Setter Property="IsEnabled" Value="False"/>
                                        </DataTrigger>

                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding MachineNameCurrentOperationMode}" Value="AddMode"/>
                                                <Condition Binding="{Binding Path=(Validation.HasError), ElementName=MachineName_Name_txb}" Value="True"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="IsEnabled" Value="False"/>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding MachineNameCurrentOperationMode}" Value="AddMode"/>
                                                <Condition Binding="{Binding Path=(Validation.HasError), ElementName=MachineName_Name_txb}" Value="False"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="IsEnabled" Value="True"/>
                                        </MultiDataTrigger>

                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>

                        <!--Cancel button-->
                        <Button Margin="20 5 20 5" Width="80"
                            Command="{Binding MachineNameCancelButtonCommand}"
                            Content="Cancel">
                            <Button.Style>
                                <Style BasedOn="{StaticResource MaterialDesignRaisedButton}" TargetType="Button">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding MachineNameCurrentOperationMode}" Value="NormalMode">
                                            <Setter Property="Visibility" Value="Hidden"/>
                                            <Setter Property="IsEnabled" Value="False"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding MachineNameCurrentOperationMode}" Value="EditMode">
                                            <Setter Property="IsEnabled" Value="True"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding MachineNameCurrentOperationMode}" Value="AddMode">
                                            <Setter Property="IsEnabled" Value="True"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>

                    </StackPanel>

                    <StackPanel Orientation="Horizontal" DockPanel.Dock="Right" HorizontalAlignment="Right">
                        <!--Delete button-->
                        <Button Margin="5 5 20 5" Width="80" Background="Red" BorderThickness="0" 
                        Command="{Binding MachineNameDeleteButtonCommand}"
                                IsEnabled="{Binding CurrentUser.Role.RoleActions[11].Delete}"
                            ToolTip="Không nên xóa"
                        Content="Xóa">
                            <Button.Style>
                                <Style BasedOn="{StaticResource MaterialDesignRaisedButton}" TargetType="Button">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding MachineNameCurrentOperationMode}" Value="NormalMode">
                                            <Setter Property="Visibility" Value="Visible"/>
                                            <Setter Property="IsEnabled" Value="True"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding MachineNameCurrentOperationMode}" Value="EditMode">
                                            <Setter Property="Visibility" Value="Hidden"/>
                                            <Setter Property="IsEnabled" Value="False"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding MachineNameCurrentOperationMode}" Value="AddMode">
                                            <Setter Property="Visibility" Value="Hidden"/>
                                            <Setter Property="IsEnabled" Value="False"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                    </StackPanel>
                </DockPanel>

            </materialDesign:Card>

            <!--Info on slected item-->
            <materialDesign:Card Grid.Row="1" Margin="5 5 5 5"  Padding="0 0 0 10">
                <materialDesign:Card.Style>
                    <Style TargetType="materialDesign:Card">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding MachineNameCurrentOperationMode}" Value="NormalMode">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding MachineNameCurrentOperationMode}" Value="EditMode">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding MachineNameCurrentOperationMode}" Value="AddMode">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </materialDesign:Card.Style>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <!-- Name -->
                    <TextBox x:Name="MachineName_Name_txb" Grid.Column="0"
                         Margin="20 5 1 15" 
                         Width="{Binding ElementName=MachineName_Name, Path=ActualWidth}"
                         Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                         materialDesign:HintAssist.Hint="Tên thiết bị đo"  
                         materialDesign:HintAssist.IsFloating="True"
                         
                         materialDesign:TextBlockAssist.AutoToolTip="True"
                         materialDesign:ValidationAssist.HorizontalAlignment="Left"
                         ToolTip="Không cần thiết">
                        <TextBox.Text>
                            <Binding Path="MachineName_Name"  Mode="TwoWay"   UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <validation:NotEmptyValidationRule ValidatesOnTargetUpdated="True"/>
                                </Binding.ValidationRules>
                                <Binding.Converter>
                                    <converter:StringReplaceMultipleSpaceToOneConverter/>
                                </Binding.Converter>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>
                </Grid>
            </materialDesign:Card>

            <!-- Machine Name datagrid-->
            <materialDesign:Card Grid.Row="2" Margin="5 5 5 0" >
                <materialDesign:Card.Style>
                    <Style TargetType="materialDesign:Card">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding MachineNameCurrentOperationMode}" Value="NormalMode">
                                <Setter Property="IsEnabled" Value="True"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding MachineNameCurrentOperationMode}" Value="EditMode">
                                <Setter Property="IsEnabled" Value="False"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding MachineNameCurrentOperationMode}" Value="AddMode">
                                <Setter Property="IsEnabled" Value="False"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </materialDesign:Card.Style>

                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="auto"/>
                    </Grid.RowDefinitions>

                    <!--Machine Name datagrid-->
                    <Grid Grid.Row="0" HorizontalAlignment="Left" Margin="20 5 20 20">
                        <DataGrid ItemsSource="{Binding MachineNames, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                          SelectedItem="{Binding SelectedMachineName , Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                          Style="{StaticResource MaterialDesignDataGrid}"
                            ColumnHeaderStyle="{StaticResource MaterialDesignDataGridColumnHeader}"
                            RowHeight="35"
                            AutoGenerateColumns="False" 
                            CanUserAddRows="False" CanUserDeleteRows="False" CanUserSortColumns="True"
                            CanUserReorderColumns="False" CanUserResizeColumns="True"  CanUserResizeRows="False"
                            EnableRowVirtualization="True"  VirtualizingPanel.VirtualizationMode="Standard"
                            SelectionMode="Single"       SelectionUnit="FullRow"
                            IsReadOnly="True"
                          ScrollViewer.CanContentScroll="True" 
                          HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
                            <DataGrid.Resources>
                                <ContextMenu x:Key="MachineNameRowContextMenu" 
                                     DataContext="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=DataContext.CurrentControl}">
                                    <MenuItem Header="Sửa" Command="{Binding MachineNameEditButtonCommand}" IsEnabled="{Binding CurrentUser.Role.RoleActions[11].Edit}" />
                                    <MenuItem Header="Thêm mới" Command="{Binding MachineNameAddButtonCommand}" IsEnabled="{Binding CurrentUser.Role.RoleActions[11].Add}"/>
                                    <Separator/>
                                    <MenuItem Header="Xóa" Foreground="Red" Command="{Binding MachineNameDeleteButtonCommand}" IsEnabled="{Binding CurrentUser.Role.RoleActions[11].Delete}"/>
                                </ContextMenu>

                                <!--Remove black border when cell is slected-->
                                <SolidColorBrush x:Key="MaterialDesignTextBoxBorder" Color="Transparent"/>
                            </DataGrid.Resources>

                            <!--Context menu appear only on row, not on header-->
                            <DataGrid.RowStyle>
                                <Style BasedOn="{StaticResource MaterialDesignDataGridRow}" TargetType="DataGridRow" >
                                    <Setter Property="ContextMenu" Value="{StaticResource MachineNameRowContextMenu}" />
                                </Style>
                            </DataGrid.RowStyle>

                            <DataGrid.Columns>
                                <DataGridTextColumn Header="Tên thiết bị" x:Name="MachineName_Name"
                                                EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnEditingStyle}"
                                                Binding="{Binding Name}" IsReadOnly="True" SortDirection="Ascending"
                                                Width="*">
                                    <DataGridTextColumn.ElementStyle>
                                        <Style TargetType="TextBlock" BasedOn="{StaticResource MaterialDesignDataGridTextColumnStyle}">
                                            <Setter Property="HorizontalAlignment" Value="Left"/>
                                        </Style>
                                    </DataGridTextColumn.ElementStyle>
                                </DataGridTextColumn>
                            </DataGrid.Columns>
                        </DataGrid>
                    </Grid>

                </Grid>
            </materialDesign:Card>
        </Grid>


        <!-- Machine Type -->
        <Grid Grid.Column="1" Margin="20 5 20 20">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <!--Operation button-->
            <materialDesign:Card Grid.Row="0" Margin="5 10 5 5"  Padding="0 0 0 0">
                <DockPanel>
                    <StackPanel Orientation="Horizontal">
                        <!--Edit button-->
                        <Button Margin="20 5 20 5" Width="80"  Command="{Binding MachineTypeEditButtonCommand}"
                                IsEnabled="{Binding CurrentUser.Role.RoleActions[12].Edit}">
                            <Button.Style>
                                <Style BasedOn="{StaticResource MaterialDesignRaisedButton}" TargetType="Button">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding MachineTypeCurrentOperationMode}" Value="NormalMode">
                                            <Setter Property="IsEnabled" Value="True"/>
                                            <Setter Property="Content" Value="Sửa"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding MachineTypeCurrentOperationMode}" Value="EditMode">
                                            <Setter Property="Content" Value="Lưu"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding MachineTypeCurrentOperationMode}" Value="AddMode">
                                            <Setter Property="IsEnabled" Value="False"/>
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                        </DataTrigger>

                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding MachineTypeCurrentOperationMode}" Value="EditMode"/>
                                                <Condition Binding="{Binding Path=(Validation.HasError), ElementName=MachineType_Name_txb}" Value="True"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="IsEnabled" Value="False"/>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding MachineTypeCurrentOperationMode}" Value="EditMode"/>
                                                <Condition Binding="{Binding Path=(Validation.HasError), ElementName=MachineType_IsActive_checkbox}" Value="True"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="IsEnabled" Value="False"/>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding MachineTypeCurrentOperationMode}" Value="EditMode"/>
                                                <Condition Binding="{Binding Path=(Validation.HasError), ElementName=MachineType_Name_txb}" Value="False"/>
                                                <Condition Binding="{Binding Path=(Validation.HasError), ElementName=MachineType_IsActive_checkbox}" Value="False"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="IsEnabled" Value="True"/>
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>

                        <!--Add button-->
                        <Button Margin="20 5 20 5" Width="80" Command="{Binding MachineTypeAddButtonCommand}"
                                IsEnabled="{Binding CurrentUser.Role.RoleActions[12].Add}">
                            <Button.Style>
                                <Style BasedOn="{StaticResource MaterialDesignRaisedButton}" TargetType="Button">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding MachineTypeCurrentOperationMode}" Value="NormalMode">
                                            <Setter Property="IsEnabled" Value="True"/>
                                            <Setter Property="Content" Value="Thêm"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding MachineTypeCurrentOperationMode}" Value="AddMode">
                                            <Setter Property="Content" Value="Lưu"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding MachineTypeCurrentOperationMode}" Value="EditMode">
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                            <Setter Property="IsEnabled" Value="False"/>
                                        </DataTrigger>

                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding MachineTypeCurrentOperationMode}" Value="AddMode"/>
                                                <Condition Binding="{Binding Path=(Validation.HasError), ElementName=MachineType_Name_txb}" Value="True"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="IsEnabled" Value="False"/>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding MachineTypeCurrentOperationMode}" Value="AddMode"/>
                                                <Condition Binding="{Binding Path=(Validation.HasError), ElementName=MachineType_IsActive_checkbox}" Value="True"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="IsEnabled" Value="False"/>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding MachineTypeCurrentOperationMode}" Value="AddMode"/>
                                                <Condition Binding="{Binding Path=(Validation.HasError), ElementName=MachineType_Name_txb}" Value="False"/>
                                                <Condition Binding="{Binding Path=(Validation.HasError), ElementName=MachineType_IsActive_checkbox}" Value="False"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="IsEnabled" Value="True"/>
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>


                        <!--Cancel button-->
                        <Button Margin="20 5 20 5" Width="80"  Command="{Binding MachineTypeCancelButtonCommand}"  Content="Hủy">
                            <Button.Style>
                                <Style BasedOn="{StaticResource MaterialDesignRaisedButton}" TargetType="Button">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding MachineTypeCurrentOperationMode}" Value="NormalMode">
                                            <Setter Property="Visibility" Value="Hidden"/>
                                            <Setter Property="IsEnabled" Value="False"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding MachineTypeCurrentOperationMode}" Value="EditMode">
                                            <Setter Property="IsEnabled" Value="True"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding MachineTypeCurrentOperationMode}" Value="AddMode">
                                            <Setter Property="IsEnabled" Value="True"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                    </StackPanel>

                    <StackPanel Orientation="Horizontal" DockPanel.Dock="Right" HorizontalAlignment="Right">
                        <!--Delete button-->
                        <Button Margin="5 5 20 5" Width="80" Background="Red" BorderThickness="0" 
                        Command="{Binding MachineTypeDeleteButtonCommand}"
                                IsEnabled="{Binding CurrentUser.Role.RoleActions[12].Delete}"
                            ToolTip="Không nên xóa"
                        Content="Xóa">
                            <Button.Style>
                                <Style BasedOn="{StaticResource MaterialDesignRaisedButton}" TargetType="Button">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding MachineTypeCurrentOperationMode}" Value="NormalMode">
                                            <Setter Property="Visibility" Value="Visible"/>
                                            <Setter Property="IsEnabled" Value="True"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding MachineTypeCurrentOperationMode}" Value="EditMode">
                                            <Setter Property="Visibility" Value="Hidden"/>
                                            <Setter Property="IsEnabled" Value="False"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding MachineTypeCurrentOperationMode}" Value="AddMode">
                                            <Setter Property="Visibility" Value="Hidden"/>
                                            <Setter Property="IsEnabled" Value="False"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                    </StackPanel>
                </DockPanel>

            </materialDesign:Card>

            <!--Info on slected item-->
            <materialDesign:Card Grid.Row="1" Margin="5 5 5 5"  Padding="0 0 0 10">
                <materialDesign:Card.Style>
                    <Style TargetType="materialDesign:Card">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding MachineTypeCurrentOperationMode}" Value="NormalMode">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding MachineTypeCurrentOperationMode}" Value="EditMode">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding MachineTypeCurrentOperationMode}" Value="AddMode">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </materialDesign:Card.Style>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <!-- MachineType.Name -->
                    <TextBox x:Name="MachineType_Name_txb" Grid.Column="0"
                         Margin="20 5 5 15" 
                         Width="{Binding ElementName=MachineType_Name, Path=ActualWidth}"
                         Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                         materialDesign:HintAssist.Hint="Loại máy đo"  
                         materialDesign:HintAssist.IsFloating="True"
                         
                         materialDesign:TextBlockAssist.AutoToolTip="True"
                         materialDesign:ValidationAssist.HorizontalAlignment="Left"
                         ToolTip="Không cần thiết">
                        <TextBox.Text>
                            <Binding Path="MachineType_Name"  Mode="TwoWay"   UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <validation:NotEmptyValidationRule ValidatesOnTargetUpdated="True"/>
                                </Binding.ValidationRules>
                                <Binding.Converter>
                                    <converter:StringReplaceMultipleSpaceToOneConverter/>
                                </Binding.Converter>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>

                    <!-- IsActive -->
                    <CheckBox x:Name="MachineType_IsActive_checkbox"  Grid.Column="2" Content="Hiệu lực"
                          BorderThickness="1" BorderBrush="Black"
                         Margin="20 5 1 15"  
                         Width="{Binding ElementName=MachineType_IsActive, Path=ActualWidth}"
                         Style="{StaticResource MaterialDesignDarkCheckBox}"
                         materialDesign:HintAssist.Hint="Hiệu lực"
                          IsThreeState="False" 
                          IsChecked="{Binding MachineType_IsActive}"/>

                </Grid>
            </materialDesign:Card>

            <!-- Machine Type datagrid-->
            <materialDesign:Card Grid.Row="2" Margin="5 5 5 0" >
                <materialDesign:Card.Style>
                    <Style TargetType="materialDesign:Card">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding MachineTypeCurrentOperationMode}" Value="NormalMode">
                                <Setter Property="IsEnabled" Value="True"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding MachineTypeCurrentOperationMode}" Value="EditMode">
                                <Setter Property="IsEnabled" Value="False"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding MachineTypeCurrentOperationMode}" Value="AddMode">
                                <Setter Property="IsEnabled" Value="False"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </materialDesign:Card.Style>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="auto"/>
                    </Grid.RowDefinitions>

                    <!--Machine Type datagrid-->
                    <Grid Grid.Row="0" Margin="20 5 20 20">
                        <DataGrid ItemsSource="{Binding MachineTypes, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                          SelectedItem="{Binding SelectedMachineType , Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                      
                          Style="{StaticResource MaterialDesignDataGrid}"
                            ColumnHeaderStyle="{StaticResource MaterialDesignDataGridColumnHeader}"
                            RowHeight="35"
                            AutoGenerateColumns="False" 
                            CanUserAddRows="False" CanUserDeleteRows="False" CanUserSortColumns="True"
                            CanUserReorderColumns="False" CanUserResizeColumns="True"  CanUserResizeRows="False"
                            EnableRowVirtualization="True"  VirtualizingPanel.VirtualizationMode="Standard"
                            SelectionMode="Single"       SelectionUnit="FullRow"
                            IsReadOnly="True"
                          
                          ScrollViewer.CanContentScroll="True" 
                          HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
                            <DataGrid.Resources>
                                <ContextMenu x:Key="MachineTypeRowContextMenu" 
                                     DataContext="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=DataContext.CurrentControl}">
                                    <MenuItem Header="Sửa" Command="{Binding MachineTypeEditButtonCommand}"  IsEnabled="{Binding CurrentUser.Role.RoleActions[12].Edit}"/>
                                    <MenuItem Header="Thêm mới" Command="{Binding MachineTypeAddButtonCommand}" IsEnabled="{Binding CurrentUser.Role.RoleActions[12].Add}"/>
                                    <Separator/>
                                    <MenuItem Header="Xóa" Foreground="Red" Command="{Binding MachineTypeDeleteButtonCommand}" IsEnabled="{Binding CurrentUser.Role.RoleActions[12].Delete}"/>
                                </ContextMenu>
                                <!--Remove black border when cell is slected-->
                                <SolidColorBrush x:Key="MaterialDesignTextBoxBorder" Color="Transparent"/>
                            </DataGrid.Resources>

                            <!--Context menu appear only on row, not on header-->
                            <DataGrid.RowStyle>
                                <Style BasedOn="{StaticResource MaterialDesignDataGridRow}" TargetType="DataGridRow" >
                                    <Setter Property="ContextMenu" Value="{StaticResource MachineTypeRowContextMenu}" />
                                </Style>
                            </DataGrid.RowStyle>

                            <DataGrid.Columns>
                                <DataGridTextColumn Header="Loại máy đo" x:Name="MachineType_Name" Width="*"
                                                EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnEditingStyle}"
                                                Binding="{Binding Name}" IsReadOnly="True"
                                                >
                                    <DataGridTextColumn.ElementStyle>
                                        <Style TargetType="TextBlock" BasedOn="{StaticResource MaterialDesignDataGridTextColumnStyle}">
                                            <Setter Property="HorizontalAlignment" Value="Left"/>
                                        </Style>
                                    </DataGridTextColumn.ElementStyle>
                                </DataGridTextColumn>

                                <DataGridCheckBoxColumn Header="Hiệu lực" x:Name="MachineType_IsActive"
                                                    ElementStyle="{StaticResource MaterialDesignDataGridCheckBoxColumnStyle}"
                                                    EditingElementStyle="{StaticResource MaterialDesignDataGridCheckBoxColumnEditingStyle}"
                                                    Binding="{Binding IsActive}"
                                                    Width="*"/>

                            </DataGrid.Columns>
                        </DataGrid>
                    </Grid>

                </Grid>
            </materialDesign:Card>
        </Grid>


        <!-- Sensor Type -->
        <Grid Grid.Column="2" Margin="20 5 100 20">
            <Grid.RowDefinitions>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="auto"/>
                <RowDefinition Height="*"/>
            </Grid.RowDefinitions>
            <!--Operation button-->
            <materialDesign:Card Grid.Row="0" Margin="5 10 5 5"  Padding="0 0 0 0">
                <DockPanel>
                    <StackPanel Orientation="Horizontal">
                        <!--Edit button-->
                        <Button Margin="20 5 20 5" Width="80"  Command="{Binding SensorTypeEditButtonCommand}"
                                IsEnabled="{Binding CurrentUser.Role.RoleActions[13].Edit}">
                            <Button.Style>
                                <Style BasedOn="{StaticResource MaterialDesignRaisedButton}" TargetType="Button">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding SensorTypeCurrentOperationMode}" Value="NormalMode">
                                            <Setter Property="IsEnabled" Value="True"/>
                                            <Setter Property="Content" Value="Sửa"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding SensorTypeCurrentOperationMode}" Value="EditMode">
                                            <Setter Property="Content" Value="Lưu"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding SensorTypeCurrentOperationMode}" Value="AddMode">
                                            <Setter Property="IsEnabled" Value="False"/>
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                        </DataTrigger>

                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding SensorTypeCurrentOperationMode}" Value="EditMode"/>
                                                <Condition Binding="{Binding Path=(Validation.HasError), ElementName=SensorType_Name_txb}" Value="True"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="IsEnabled" Value="False"/>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding SensorTypeCurrentOperationMode}" Value="EditMode"/>
                                                <Condition Binding="{Binding Path=(Validation.HasError), ElementName=SensorType_IsActive_checkbox}" Value="True"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="IsEnabled" Value="False"/>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding SensorTypeCurrentOperationMode}" Value="EditMode"/>
                                                <Condition Binding="{Binding Path=(Validation.HasError), ElementName=SensorType_Name_txb}" Value="False"/>
                                                <Condition Binding="{Binding Path=(Validation.HasError), ElementName=SensorType_IsActive_checkbox}" Value="False"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="IsEnabled" Value="True"/>
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>

                        <!--Add button-->
                        <Button Margin="20 5 20 5" Width="80" Command="{Binding SensorTypeAddButtonCommand}"
                                IsEnabled="{Binding CurrentUser.Role.RoleActions[13].Add}">
                            <Button.Style>
                                <Style BasedOn="{StaticResource MaterialDesignRaisedButton}" TargetType="Button">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding SensorTypeCurrentOperationMode}" Value="NormalMode">
                                            <Setter Property="IsEnabled" Value="True"/>
                                            <Setter Property="Content" Value="Thêm"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding SensorTypeCurrentOperationMode}" Value="AddMode">
                                            <Setter Property="Content" Value="Lưu"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding SensorTypeCurrentOperationMode}" Value="EditMode">
                                            <Setter Property="Visibility" Value="Collapsed"/>
                                            <Setter Property="IsEnabled" Value="False"/>
                                        </DataTrigger>

                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding SensorTypeCurrentOperationMode}" Value="AddMode"/>
                                                <Condition Binding="{Binding Path=(Validation.HasError), ElementName=SensorType_Name_txb}" Value="True"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="IsEnabled" Value="False"/>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding SensorTypeCurrentOperationMode}" Value="AddMode"/>
                                                <Condition Binding="{Binding Path=(Validation.HasError), ElementName=SensorType_IsActive_checkbox}" Value="True"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="IsEnabled" Value="False"/>
                                        </MultiDataTrigger>
                                        <MultiDataTrigger>
                                            <MultiDataTrigger.Conditions>
                                                <Condition Binding="{Binding SensorTypeCurrentOperationMode}" Value="AddMode"/>
                                                <Condition Binding="{Binding Path=(Validation.HasError), ElementName=SensorType_Name_txb}" Value="False"/>
                                                <Condition Binding="{Binding Path=(Validation.HasError), ElementName=SensorType_IsActive_checkbox}" Value="False"/>
                                            </MultiDataTrigger.Conditions>
                                            <Setter Property="IsEnabled" Value="True"/>
                                        </MultiDataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>


                        <!--Cancel button-->
                        <Button Margin="20 5 20 5" Width="80"  Command="{Binding SensorTypeCancelButtonCommand}"  Content="Hủy">
                            <Button.Style>
                                <Style BasedOn="{StaticResource MaterialDesignRaisedButton}" TargetType="Button">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding SensorTypeCurrentOperationMode}" Value="NormalMode">
                                            <Setter Property="Visibility" Value="Hidden"/>
                                            <Setter Property="IsEnabled" Value="False"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding SensorTypeCurrentOperationMode}" Value="EditMode">
                                            <Setter Property="IsEnabled" Value="True"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding SensorTypeCurrentOperationMode}" Value="AddMode">
                                            <Setter Property="IsEnabled" Value="True"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                    </StackPanel>

                    <StackPanel Orientation="Horizontal" DockPanel.Dock="Right" HorizontalAlignment="Right">
                        <!--Delete button-->
                        <Button Margin="5 5 20 5" Width="80" Background="Red" BorderThickness="0" 
                        Command="{Binding SensorTypeDeleteButtonCommand}"
                                IsEnabled="{Binding CurrentUser.Role.RoleActions[13].Delete}"
                            ToolTip="Không nên xóa"
                        Content="Xóa">
                            <Button.Style>
                                <Style BasedOn="{StaticResource MaterialDesignRaisedButton}" TargetType="Button">
                                    <Style.Triggers>
                                        <DataTrigger Binding="{Binding SensorTypeCurrentOperationMode}" Value="NormalMode">
                                            <Setter Property="Visibility" Value="Visible"/>
                                            <Setter Property="IsEnabled" Value="True"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding SensorTypeCurrentOperationMode}" Value="EditMode">
                                            <Setter Property="Visibility" Value="Hidden"/>
                                            <Setter Property="IsEnabled" Value="False"/>
                                        </DataTrigger>
                                        <DataTrigger Binding="{Binding SensorTypeCurrentOperationMode}" Value="AddMode">
                                            <Setter Property="Visibility" Value="Hidden"/>
                                            <Setter Property="IsEnabled" Value="False"/>
                                        </DataTrigger>
                                    </Style.Triggers>
                                </Style>
                            </Button.Style>
                        </Button>
                    </StackPanel>
                </DockPanel>

            </materialDesign:Card>

            <!--Info on slected item-->
            <materialDesign:Card Grid.Row="1" Margin="5 5 5 5"  Padding="0 0 0 10">
                <materialDesign:Card.Style>
                    <Style TargetType="materialDesign:Card">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding SensorTypeCurrentOperationMode}" Value="NormalMode">
                                <Setter Property="Visibility" Value="Collapsed"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding SensorTypeCurrentOperationMode}" Value="EditMode">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding SensorTypeCurrentOperationMode}" Value="AddMode">
                                <Setter Property="Visibility" Value="Visible"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </materialDesign:Card.Style>
                <Grid>
                    <Grid.ColumnDefinitions>
                        <ColumnDefinition Width="Auto"/>
                        <ColumnDefinition Width="Auto"/>
                    </Grid.ColumnDefinitions>

                    <!-- Name -->
                    <TextBox x:Name="SensorType_Name_txb" Grid.Column="0"
                         Margin="20 5 5 15" 
                         Width="{Binding ElementName=SensorType_Name, Path=ActualWidth}"
                         Style="{StaticResource MaterialDesignFloatingHintTextBox}"
                         materialDesign:HintAssist.Hint="Loại máy đo"  
                         materialDesign:HintAssist.IsFloating="True"
                         
                         materialDesign:TextBlockAssist.AutoToolTip="True"
                         materialDesign:ValidationAssist.HorizontalAlignment="Left"
                         ToolTip="Không cần thiết">
                        <TextBox.Text>
                            <Binding Path="SensorType_Name"  Mode="TwoWay"   UpdateSourceTrigger="PropertyChanged">
                                <Binding.ValidationRules>
                                    <validation:NotEmptyValidationRule ValidatesOnTargetUpdated="True"/>
                                </Binding.ValidationRules>
                                <Binding.Converter>
                                    <converter:StringReplaceMultipleSpaceToOneConverter/>
                                </Binding.Converter>
                            </Binding>
                        </TextBox.Text>
                    </TextBox>

                    <!-- IsActive -->
                    <CheckBox x:Name="SensorType_IsActive_checkbox"  Grid.Column="2" Content="Hiệu lực"
                          BorderThickness="1" BorderBrush="Black"
                         Margin="20 5 1 15"  
                         Width="{Binding ElementName=SensorType_IsActive, Path=ActualWidth}"
                         Style="{StaticResource MaterialDesignDarkCheckBox}"
                         materialDesign:HintAssist.Hint="Hiệu lực"
                          IsThreeState="False" 
                          IsChecked="{Binding SensorType_IsActive}"/>

                </Grid>
            </materialDesign:Card>

            <!-- Sensor Type datagrid-->
            <materialDesign:Card Grid.Row="2" Margin="5 5 5 0" >
                <materialDesign:Card.Style>
                    <Style TargetType="materialDesign:Card">
                        <Style.Triggers>
                            <DataTrigger Binding="{Binding SensorTypeCurrentOperationMode}" Value="NormalMode">
                                <Setter Property="IsEnabled" Value="True"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding SensorTypeCurrentOperationMode}" Value="EditMode">
                                <Setter Property="IsEnabled" Value="False"/>
                            </DataTrigger>
                            <DataTrigger Binding="{Binding SensorTypeCurrentOperationMode}" Value="AddMode">
                                <Setter Property="IsEnabled" Value="False"/>
                            </DataTrigger>
                        </Style.Triggers>
                    </Style>
                </materialDesign:Card.Style>
                <Grid>
                    <Grid.RowDefinitions>
                        <RowDefinition Height="*"/>
                        <RowDefinition Height="auto"/>
                    </Grid.RowDefinitions>

                    <!--Sensor Type datagrid-->
                    <Grid Grid.Row="0" Margin="20 5 20 20">
                        <DataGrid ItemsSource="{Binding SensorTypes, Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                          SelectedItem="{Binding SelectedSensorType , Mode=TwoWay, UpdateSourceTrigger=PropertyChanged}"
                      
                          Style="{StaticResource MaterialDesignDataGrid}"
                            ColumnHeaderStyle="{StaticResource MaterialDesignDataGridColumnHeader}"
                            RowHeight="35"
                            AutoGenerateColumns="False" 
                            CanUserAddRows="False" CanUserDeleteRows="False" CanUserSortColumns="True"
                            CanUserReorderColumns="False" CanUserResizeColumns="True"  CanUserResizeRows="False"
                            EnableRowVirtualization="True"  VirtualizingPanel.VirtualizationMode="Standard"
                            SelectionMode="Single"       SelectionUnit="FullRow"
                            IsReadOnly="True"
                          
                          ScrollViewer.CanContentScroll="True" 
                          HorizontalScrollBarVisibility="Auto" VerticalScrollBarVisibility="Auto">
                            <DataGrid.Resources>
                                <ContextMenu x:Key="SensorTypeRowContextMenu" 
                                     DataContext="{Binding RelativeSource={RelativeSource AncestorType={x:Type Window}}, Path=DataContext.CurrentControl}">
                                    <MenuItem Header="Sửa" Command="{Binding SensorTypeEditButtonCommand}"  IsEnabled="{Binding CurrentUser.Role.RoleActions[13].Edit}"/>
                                    <MenuItem Header="Thêm mới" Command="{Binding SensorTypeAddButtonCommand}" IsEnabled="{Binding CurrentUser.Role.RoleActions[13].Add}"/>
                                    <Separator/>
                                    <MenuItem Header="Xóa" Foreground="Red" Command="{Binding SensorTypeDeleteButtonCommand}" IsEnabled="{Binding CurrentUser.Role.RoleActions[13].Delete}"/>
                                </ContextMenu>

                                <!--Remove black border when cell is slected-->
                                <SolidColorBrush x:Key="MaterialDesignTextBoxBorder" Color="Transparent"/>
                            </DataGrid.Resources>

                            <!--Context menu appear only on row, not on header-->
                            <DataGrid.RowStyle>
                                <Style BasedOn="{StaticResource MaterialDesignDataGridRow}" TargetType="DataGridRow" >
                                    <Setter Property="ContextMenu" Value="{StaticResource SensorTypeRowContextMenu}" />
                                </Style>
                            </DataGrid.RowStyle>

                            <DataGrid.Columns>
                                <DataGridTextColumn Header="Loại đầu đo" x:Name="SensorType_Name" Width="*"
                                                EditingElementStyle="{StaticResource MaterialDesignDataGridTextColumnEditingStyle}"
                                                Binding="{Binding Name}" IsReadOnly="True"
                                                >
                                    <DataGridTextColumn.ElementStyle>
                                        <Style TargetType="TextBlock" BasedOn="{StaticResource MaterialDesignDataGridTextColumnStyle}">
                                            <Setter Property="HorizontalAlignment" Value="Left"/>
                                        </Style>
                                    </DataGridTextColumn.ElementStyle>
                                </DataGridTextColumn>

                                <DataGridCheckBoxColumn Header="Hiệu lực" x:Name="SensorType_IsActive"
                                                    ElementStyle="{StaticResource MaterialDesignDataGridCheckBoxColumnStyle}"
                                                    EditingElementStyle="{StaticResource MaterialDesignDataGridCheckBoxColumnEditingStyle}"
                                                    Binding="{Binding IsActive}"
                                                    Width="*"/>

                            </DataGrid.Columns>
                        </DataGrid>
                    </Grid>

                </Grid>
            </materialDesign:Card>
        </Grid>

    </Grid>
    
</UserControl>
